<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classMEI" kind="class" language="C++" prot="public">
    <compoundname>MEI</compoundname>
    <includes local="no">MEI.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMEI_1a8859a28b721bf4c75d918bfe9494578f" prot="private" static="no" mutable="no">
        <type>mei::MeiDocument</type>
        <definition>mei::MeiDocument MEI::_document</definition>
        <argsstring></argsstring>
        <name>_document</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classMEI" kindref="compound">MEI</ref> document </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="99" column="1" bodyfile="src/output/MEI.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMEI_1a939ef26ad95c8b00d9c1881a3c83f188" prot="private" static="no" mutable="no">
        <type>mei::Score *</type>
        <definition>mei::Score* MEI::_scoreElement</definition>
        <argsstring></argsstring>
        <name>_scoreElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The score element: contains the music </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="105" column="1" bodyfile="src/output/MEI.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__output_1ga67acb233e47d9942cb678fb24b67f799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MEI::MEI</definition>
        <argsstring>()</argsstring>
        <name>MEI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Main constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="53" column="1" bodyfile="src/output/MEI.cpp" bodystart="25" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga28b9390a3699a9ae7abdba51cb3cb7d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MEI::createFromScore</definition>
        <argsstring>(const ScoreModel::Score &amp;s)</argsstring>
        <name>createFromScore</name>
        <param>
          <type>const <ref refid="classScoreModel_1_1Score" kindref="compound">ScoreModel::Score</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Check with eth Spiritual example: case of a </para>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="59" column="1" bodyfile="src/output/MEI.cpp" bodystart="44" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gaec3627352aed16ef31dfabe7d243c476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MEI::createScoreDef</definition>
        <argsstring>(const ScoreModel::Score &amp;s)</argsstring>
        <name>createScoreDef</name>
        <param>
          <type>const <ref refid="classScoreModel_1_1Score" kindref="compound">ScoreModel::Score</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create the score definition part </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="64" column="1" bodyfile="src/output/MEI.cpp" bodystart="168" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classMEI_1a5211ad9f61cfb653788c2c72df6e644c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MEI::findStartingBeam</definition>
        <argsstring>(const ScoreModel::Score &amp;s)</argsstring>
        <name>findStartingBeam</name>
        <param>
          <type>const <ref refid="classScoreModel_1_1Score" kindref="compound">ScoreModel::Score</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find whether a beam start on an event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga7f0c47ab091313feb0a7fba4d23e09da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MEI::writeInFile</definition>
        <argsstring>(const string fname)</argsstring>
        <name>writeInFile</name>
        <param>
          <type>const string</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save in file </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="75" column="1" bodyfile="src/output/MEI.cpp" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga707656b4b214953f8be23c95415a8ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; string, int &gt;</type>
        <definition>std::pair&lt; string, int &gt; MEI::chooseClef</definition>
        <argsstring>(std::pair&lt; Pitch, Pitch &gt; range)</argsstring>
        <name>chooseClef</name>
        <param>
          <type>std::pair&lt; <ref refid="classPitch" kindref="compound">Pitch</ref>, <ref refid="classPitch" kindref="compound">Pitch</ref> &gt;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose a clef based on range </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="80" column="1" bodyfile="src/output/MEI.cpp" bodystart="212" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga1e4233e0a65d642f227dba08be1fe592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MEI::~MEI</definition>
        <argsstring>()</argsstring>
        <name>~MEI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="92" column="1" bodyfile="src/output/MEI.cpp" bodystart="307" bodyend="309"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="group__output_1ga6c05e4fec7d79e79d9022130e8fef2ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Note *</type>
        <definition>Note * MEI::makeNote</definition>
        <argsstring>(const ScoreModel::Note *noteEvent)</argsstring>
        <name>makeNote</name>
        <param>
          <type>const <ref refid="classScoreModel_1_1Note" kindref="compound">ScoreModel::Note</ref> *</type>
          <declname>noteEvent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="85" column="1" bodyfile="src/output/MEI.cpp" bodystart="235" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gabbdc2a86af7313ccc63b1b502d9b0aa5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TupletSpan *</type>
        <definition>TupletSpan * MEI::makeTupletSpan</definition>
        <argsstring>(const ScoreModel::Tuplet *tuplet)</argsstring>
        <name>makeTupletSpan</name>
        <param>
          <type>const <ref refid="classScoreModel_1_1Tuplet" kindref="compound">ScoreModel::Tuplet</ref> *</type>
          <declname>tuplet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="86" column="1" bodyfile="src/output/MEI.cpp" bodystart="276" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gafa5b4ccd58b7537120b30437c8072852" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tie *</type>
        <definition>Tie * MEI::makeTie</definition>
        <argsstring>(const ScoreModel::Tie *tie)</argsstring>
        <name>makeTie</name>
        <param>
          <type>const ScoreModel::Tie *</type>
          <declname>tie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/MEI.hpp" line="87" column="1" bodyfile="src/output/MEI.cpp" bodystart="264" bodyend="273"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The main <ref refid="classMEI" kindref="compound">MEI</ref> class.</para>
<para>Takes a Rhythm tree as input, and creates a <ref refid="classMEI" kindref="compound">MEI</ref> score </para>
    </detaileddescription>
    <location file="src/output/MEI.hpp" line="47" column="1" bodyfile="src/output/MEI.hpp" bodystart="46" bodyend="107"/>
    <listofallmembers>
      <member refid="classMEI_1a8859a28b721bf4c75d918bfe9494578f" prot="private" virt="non-virtual"><scope>MEI</scope><name>_document</name></member>
      <member refid="classMEI_1a939ef26ad95c8b00d9c1881a3c83f188" prot="private" virt="non-virtual"><scope>MEI</scope><name>_scoreElement</name></member>
      <member refid="group__output_1ga707656b4b214953f8be23c95415a8ed5" prot="public" virt="non-virtual"><scope>MEI</scope><name>chooseClef</name></member>
      <member refid="group__output_1ga28b9390a3699a9ae7abdba51cb3cb7d5" prot="public" virt="non-virtual"><scope>MEI</scope><name>createFromScore</name></member>
      <member refid="group__output_1gaec3627352aed16ef31dfabe7d243c476" prot="public" virt="non-virtual"><scope>MEI</scope><name>createScoreDef</name></member>
      <member refid="classMEI_1a5211ad9f61cfb653788c2c72df6e644c" prot="public" virt="non-virtual"><scope>MEI</scope><name>findStartingBeam</name></member>
      <member refid="group__output_1ga6c05e4fec7d79e79d9022130e8fef2ad" prot="public" virt="non-virtual"><scope>MEI</scope><name>makeNote</name></member>
      <member refid="group__output_1gafa5b4ccd58b7537120b30437c8072852" prot="public" virt="non-virtual"><scope>MEI</scope><name>makeTie</name></member>
      <member refid="group__output_1gabbdc2a86af7313ccc63b1b502d9b0aa5" prot="public" virt="non-virtual"><scope>MEI</scope><name>makeTupletSpan</name></member>
      <member refid="group__output_1ga67acb233e47d9942cb678fb24b67f799" prot="public" virt="non-virtual"><scope>MEI</scope><name>MEI</name></member>
      <member refid="group__output_1ga7f0c47ab091313feb0a7fba4d23e09da" prot="public" virt="non-virtual"><scope>MEI</scope><name>writeInFile</name></member>
      <member refid="group__output_1ga1e4233e0a65d642f227dba08be1fe592" prot="public" virt="non-virtual"><scope>MEI</scope><name>~MEI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
