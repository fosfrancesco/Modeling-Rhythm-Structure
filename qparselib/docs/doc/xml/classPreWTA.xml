<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classPreWTA" kind="class" language="C++" prot="public">
    <compoundname>PreWTA</compoundname>
    <basecompoundref refid="classWTA" prot="public" virt="non-virtual">WTA</basecompoundref>
    <includes local="no">PreWTA.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classPreWTA_1a0b2cd72d4a008184c7f92adaa8213834" prot="private" static="no" mutable="no">
        <type>const <ref refid="classWTA" kindref="compound">WTA</ref> &amp;</type>
        <definition>const WTA&amp; PreWTA::_schema</definition>
        <argsstring></argsstring>
        <name>_schema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/PreWTA.hpp" line="158" column="1" bodyfile="src/schemata/PreWTA.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPreWTA_1ac6ae5e7c4f516b37604e37f2864f5b68" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classPreState" kindref="compound">PreState</ref>, state_t &gt;</type>
        <definition>std::map&lt;PreState, state_t&gt; PreWTA::_statemap</definition>
        <argsstring></argsstring>
        <name>_statemap</name>
        <briefdescription>
<para>map of <ref refid="classPreState" kindref="compound">PreState</ref> into their index in <ref refid="classPreWTA" kindref="compound">PreWTA</ref> tmp (only for constructor) unordered_map&lt;cs_key, state_t, container_hasher&gt; _statemap; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/PreWTA.hpp" line="163" column="1" bodyfile="src/schemata/PreWTA.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPreWTA_1a334a9b625d7ac24e49e813c22aabd739" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vector&lt; state_t &gt; &gt;</type>
        <definition>std::vector&lt;vector&lt;state_t&gt; &gt; PreWTA::_initials</definition>
        <argsstring></argsstring>
        <name>_initials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/PreWTA.hpp" line="165" column="1" bodyfile="src/schemata/PreWTA.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__schemata_1ga6287aa82de69987b65518b4997112ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PreWTA::PreWTA</definition>
        <argsstring>(const WTA &amp;)</argsstring>
        <name>PreWTA</name>
        <param>
          <type>const <ref refid="classWTA" kindref="compound">WTA</ref> &amp;</type>
          <defname>schema</defname>
        </param>
        <briefdescription>
<para>construction from <ref refid="classWTA" kindref="compound">WTA</ref> (base schema) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/PreWTA.hpp" line="137" column="1" bodyfile="src/schemata/PreWTA.cpp" bodystart="108" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classPreWTA_1a0cb0b8f217198e19367d88674605995e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool PreWTA::hasType</definition>
        <argsstring>(std::string code) const</argsstring>
        <name>hasType</name>
        <reimplements refid="classWTA_1a23060c851d5cf624215c2d9dc8ad4b45">hasType</reimplements>
        <param>
          <type>std::string</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/PreWTA.hpp" line="139" column="1" bodyfile="src/schemata/PreWTA.hpp" bodystart="139" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1gaf47213e6243f48f06681089e03fa08ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>state_t</type>
        <definition>state_t PreWTA::initial</definition>
        <argsstring>(pre_t pre=0, pre_t post=0) const</argsstring>
        <name>initial</name>
        <reimplements refid="classWTA_1ae6b10f70925f14f36b839e5d8657bc5e">initial</reimplements>
        <param>
          <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
          <declname>pre</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
          <declname>post</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>initial(pre, port) returns state representing the whole segment, with pre points of the previous segment aligned to the left and post points of the current segment aligned to the right (i.e. to the left of the next segment) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/PreWTA.hpp" line="151" column="1" bodyfile="src/schemata/PreWTA.cpp" bodystart="369" bodyend="374"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="group__schemata_1gaab30a1faaa381ecfabd705a8c12d179b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
        <definition>pre_t PreWTA::pre</definition>
        <argsstring>(state_t)</argsstring>
        <name>pre</name>
        <param>
          <type>state_t</type>
          <defname>s</defname>
        </param>
        <briefdescription>
<para>access to original components of new <ref refid="classPreWTA" kindref="compound">PreWTA</ref> states </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/PreWTA.hpp" line="143" column="1" bodyfile="src/schemata/PreWTA.cpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga2c8c24b19312ad6436eaf76e4506e02f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
        <definition>pre_t PreWTA::post</definition>
        <argsstring>(state_t)</argsstring>
        <name>post</name>
        <param>
          <type>state_t</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/PreWTA.hpp" line="144" column="1" bodyfile="src/schemata/PreWTA.cpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga3e74404d5f453b8eed85254791724ffe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>state_t</type>
        <definition>state_t PreWTA::state</definition>
        <argsstring>(state_t)</argsstring>
        <name>state</name>
        <param>
          <type>state_t</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/PreWTA.hpp" line="145" column="1" bodyfile="src/schemata/PreWTA.cpp" bodystart="149" bodyend="156"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classPreWTA_1ad81a5d6ce9870bd4efa5e970004bafd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const PreWTA &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>o</defname>
        </param>
        <param>
          <type>const <ref refid="classPreWTA" kindref="compound">PreWTA</ref> &amp;</type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/PreWTA.hpp" line="153" column="1" bodyfile="src/schemata/PreWTA.cpp" bodystart="377" bodyend="418"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="group__schemata_1gaf528dddbe05e879324558a4518738b2d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>state_t</type>
        <definition>state_t PreWTA::addPreState</definition>
        <argsstring>(const PreState &amp;)</argsstring>
        <name>addPreState</name>
        <param>
          <type>const <ref refid="classPreState" kindref="compound">PreState</ref> &amp;</type>
          <defname>ps</defname>
        </param>
        <briefdescription>
<para>addPreState(ps) returns the <ref refid="classPreWTA" kindref="compound">PreWTA</ref> state s associated to the <ref refid="classPreState" kindref="compound">PreState</ref> ps if there exists one. otherwise: a new <ref refid="classPreWTA" kindref="compound">PreWTA</ref> state s is created, s is associated to cs, s is added to the table the <ref refid="classPreWTA" kindref="compound">PreWTA</ref> transitions with head s are computed and added to the table s is returned moreover, the state is added to the initial state set of the <ref refid="classPreWTA" kindref="compound">PreWTA</ref> if the state component of ps is initial. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/PreWTA.hpp" line="179" column="1" bodyfile="src/schemata/PreWTA.cpp" bodystart="159" bodyend="366"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>extension of <ref refid="classWTA" kindref="compound">WTA</ref> where states are associated pre and post values. </para>
    </briefdescription>
    <detaileddescription>
<para><itemizedlist>
<listitem><para>post is a number of points</para>
</listitem><listitem><para>pre is the post of the previous sibling</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="warning"><para>deprecated</para>
</simplesect>
extension of a given schema (<ref refid="classWTA" kindref="compound">WTA</ref>) with pre and post information in states: during a computation, the current state is associated to an input segment,<itemizedlist>
<listitem><para>pre value is an abstraction of the number of points in the previous segment aligned to the left of the current segment.</para>
</listitem><listitem><para>post value is an abstraction of the number of points aligned to the right of the current segment. cf. Label::abstract for the abstraction domain</para>
</listitem></itemizedlist>
</para>
<para>top-down construction of the transition table, principle:<itemizedlist>
<listitem><para>pre propagate from a node to its leftmost child</para>
</listitem><listitem><para>post propagte from a node to it rightmost child</para>
</listitem><listitem><para>for 2 states s1, s2 at successive siblings, it holds that s1.post = s2.pre</para>
</listitem></itemizedlist>
</para>
<para>given q state of schema, k &lt;= max{ n | q -&gt; q1,...,qn | w transition of schema} mright(q, k) = # point d’input dans la derniere 2k partie de p</para>
<para>we start with states &lt;q0, pre0, post0&gt; in a queue q0 = initial state of the schema pre0 arbitrary (input of problem = previous tree). ctypically 0. post0 in [0, MAX_GRACE]</para>
<para>for all state &lt;q, pre, post&gt; taken from the queue</para>
<para>for all final transition q -&gt; s | w of the schema we add the transition &lt;q, pre, post&gt; -&gt; &lt;s, pre, post&gt; | w such that the value of s abstracts the possible values of pre + lalign(path) for any path.</para>
<para>for all inner transition q -&gt; (q1,...,qk) | w in schema (k &gt; 1) for all post in [0..MAX_GRACE] we add the transitions &lt;q, pre, post&gt; -&gt; (&lt;q1, pre1, post1&gt;,..., &lt;qk, prek, postk&gt;) | w such that<itemizedlist>
<listitem><para>postk = post</para>
</listitem><listitem><para>pre1 = pre</para>
</listitem><listitem><para>for all 1 &lt;= i &lt; k, posti = prei+1 we also add the states &lt;q1, pre1, post1&gt;,..., &lt;qk, prek, postk&gt; in the queue </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="343">
        <label>WTA</label>
        <link refid="classWTA"/>
      </node>
      <node id="342">
        <label>PreWTA</label>
        <link refid="classPreWTA"/>
        <childnode refid="343" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="347">
        <label>LetterWeight</label>
        <link refid="classLetterWeight"/>
      </node>
      <node id="345">
        <label>WTA</label>
        <link refid="classWTA"/>
        <childnode refid="346" relation="usage">
          <edgelabel>_seed</edgelabel>
        </childnode>
      </node>
      <node id="346">
        <label>Weight</label>
        <link refid="classWeight"/>
        <childnode refid="347" relation="usage">
          <edgelabel>_letter</edgelabel>
        </childnode>
      </node>
      <node id="344">
        <label>PreWTA</label>
        <link refid="classPreWTA"/>
        <childnode refid="345" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/schemata/PreWTA.hpp" line="132" column="1" bodyfile="src/schemata/PreWTA.hpp" bodystart="131" bodyend="184"/>
    <listofallmembers>
      <member refid="classWTA_1a3ed6ca11b3e520485171a0f07deffd21" prot="protected" virt="non-virtual"><scope>PreWTA</scope><name>_cpt_size</name></member>
      <member refid="classWTA_1a76cf3c27412f9d61464a8a82aea97b89" prot="protected" virt="non-virtual"><scope>PreWTA</scope><name>_cpt_tr</name></member>
      <member refid="classWTA_1a52dd7c5ad9439670d75df10f2dd1e4df" prot="protected" virt="non-virtual"><scope>PreWTA</scope><name>_initial</name></member>
      <member refid="classPreWTA_1a334a9b625d7ac24e49e813c22aabd739" prot="private" virt="non-virtual"><scope>PreWTA</scope><name>_initials</name></member>
      <member refid="classWTA_1acb19a9da4f88e4b3538b6889cbd49a08" prot="protected" virt="non-virtual"><scope>PreWTA</scope><name>_max_post</name></member>
      <member refid="classWTA_1ae6d1c616caceb7819d4d23f4a635cddc" prot="protected" virt="non-virtual"><scope>PreWTA</scope><name>_max_pre</name></member>
      <member refid="classPreWTA_1a0b2cd72d4a008184c7f92adaa8213834" prot="private" virt="non-virtual"><scope>PreWTA</scope><name>_schema</name></member>
      <member refid="classWTA_1ad93a124d289cf4d1e2801fccb01ca8ea" prot="protected" virt="non-virtual"><scope>PreWTA</scope><name>_seed</name></member>
      <member refid="classPreWTA_1ac6ae5e7c4f516b37604e37f2864f5b68" prot="private" virt="non-virtual"><scope>PreWTA</scope><name>_statemap</name></member>
      <member refid="classWTA_1a0d3422d597fbe64d655d9ced77dd7b8f" prot="protected" virt="non-virtual"><scope>PreWTA</scope><name>_table</name></member>
      <member refid="group__schemata_1ga91e272f4f9463149cd296f48e65a4185" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>abstract</name></member>
      <member refid="group__schemata_1ga924a1c533383a7185b9d466b59c5a495" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>add</name></member>
      <member refid="group__schemata_1ga01de1e03d09518b38ab69a2075276ae2" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>add</name></member>
      <member refid="group__schemata_1gaf528dddbe05e879324558a4518738b2d" prot="private" virt="non-virtual"><scope>PreWTA</scope><name>addPreState</name></member>
      <member refid="group__schemata_1gab8ea841b4a1e71ef70d3fda927f0507d" prot="protected" virt="non-virtual"><scope>PreWTA</scope><name>allStates</name></member>
      <member refid="group__schemata_1ga23c3f9884c683e4bbab323208e08c672" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>begin</name></member>
      <member refid="group__schemata_1gaec169477bdc2cf883916c38dbc18e577" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>clean</name></member>
      <member refid="group__schemata_1ga9370cdd31619d49bfb0b18fa6b4e13b7" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>countAll</name></member>
      <member refid="group__schemata_1ga5f3a0d868bf26b504cccc53b4d55e09a" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>CountingtoPenalty</name></member>
      <member refid="group__schemata_1ga8dfef6b591f952f0fea9dae1f5e475c7" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>CountingtoStochastic</name></member>
      <member refid="group__schemata_1ga0f6551b20a213eb88c6a7e822ebc5915" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>countStates</name></member>
      <member refid="group__schemata_1ga8acbd7562a6f69e7634d6b9f9e341e4a" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>countTransitions</name></member>
      <member refid="group__schemata_1gada977ff7270308f29852b59f38965bde" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>empty</name></member>
      <member refid="group__schemata_1gaea41b32c37bbe955d0359039d7731fea" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>emptyStates</name></member>
      <member refid="group__schemata_1gaf5075f5a210343d6da208f4c80421cb5" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>end</name></member>
      <member refid="group__schemata_1gaa6598176fb91c70988bea7cf824ec157" prot="public" virt="virtual"><scope>PreWTA</scope><name>eval</name></member>
      <member refid="group__schemata_1gac842f196f85e3c3b079c7c0992173e46" prot="public" virt="virtual"><scope>PreWTA</scope><name>eval</name></member>
      <member refid="classPreWTA_1a0cb0b8f217198e19367d88674605995e" prot="public" virt="virtual"><scope>PreWTA</scope><name>hasType</name></member>
      <member refid="group__schemata_1gaf3c11e99698a2cf7ef039632dc5e2b6b" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>hasWeightType</name></member>
      <member refid="group__schemata_1gaf47213e6243f48f06681089e03fa08ef" prot="public" virt="virtual"><scope>PreWTA</scope><name>initial</name></member>
      <member refid="classWTA_1a5d8ace9f515a3902d889db560f08f4c5" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>initials</name></member>
      <member refid="group__schemata_1ga9ef4193ae949ae7c9e52d30720e37202" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>isClean</name></member>
      <member refid="group__schemata_1ga88d07a1e47cc3ee537234861b7336dd6" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>isInitial</name></member>
      <member refid="group__schemata_1ga4459bd6654cbe35b39df9cade16c6d58" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>isRegistered</name></member>
      <member refid="classWTA_1a1a5cead20cba42a111ff7ab5546bc54c" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>max_post</name></member>
      <member refid="classWTA_1a646bb2048b24358325f8e07c789af82c" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>max_pre</name></member>
      <member refid="classWTA_1aa4eda8d626af33674c59fef22c8220c1" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>normalize</name></member>
      <member refid="group__schemata_1ga28c9a7e35d4d516ef0f9967e773305f8" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>oftarget</name></member>
      <member refid="classPreWTA_1ad81a5d6ce9870bd4efa5e970004bafd3" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>operator&lt;&lt;</name></member>
      <member refid="group__schemata_1gaff1196a45ffd1400bc4004e27b167218" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>PenaltytoCounting</name></member>
      <member refid="group__schemata_1ga2c8c24b19312ad6436eaf76e4506e02f" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>post</name></member>
      <member refid="group__schemata_1gaab30a1faaa381ecfabd705a8c12d179b" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>pre</name></member>
      <member refid="group__schemata_1ga6287aa82de69987b65518b4997112ac5" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>PreWTA</name></member>
      <member refid="group__schemata_1gaeb713b8807bc81c6c6519ced5d531e06" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>print</name></member>
      <member refid="group__schemata_1ga3d8d24249e26ecc8bbdaf672c6e8d3cf" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>remove</name></member>
      <member refid="group__schemata_1ga625d9da502c5cd554797ebe9ee9023c4" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>resolution</name></member>
      <member refid="group__schemata_1gab201fee50d73843159cbef5f453838f0" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>size</name></member>
      <member refid="group__schemata_1ga3e74404d5f453b8eed85254791724ffe" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>state</name></member>
      <member refid="group__schemata_1gae6fb2dbd82ed290528b90ee7bb4b6ccc" prot="protected" virt="non-virtual"><scope>PreWTA</scope><name>step</name></member>
      <member refid="group__schemata_1ga0bddc6750b18023be6976bd5cd46a2f5" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>StochastictoPenalty</name></member>
      <member refid="group__schemata_1gabfe48e6398d83c03161b664dadcf8fcd" prot="public" virt="virtual"><scope>PreWTA</scope><name>weight_one</name></member>
      <member refid="group__schemata_1ga762b5bbee46468815993417ca9b3d9c6" prot="public" virt="virtual"><scope>PreWTA</scope><name>weight_zero</name></member>
      <member refid="group__schemata_1ga5636da911ebbe8772c5444172d56800d" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>WTA</name></member>
      <member refid="group__schemata_1ga6eeb789b8c8aa8404f611a6fed61faca" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>WTA</name></member>
      <member refid="group__schemata_1gaacdee6c2292baea7f712c84a5e205432" prot="public" virt="non-virtual"><scope>PreWTA</scope><name>~WTA</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
