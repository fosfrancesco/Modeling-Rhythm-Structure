<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="Spiral_8hpp" kind="file" language="C++">
    <compoundname>Spiral.hpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">cmath</includes>
    <includes refid="Pitch_8hpp" local="yes">Pitch.hpp</includes>
    <includedby refid="InputSegment_8hpp" local="yes">src/segment/InputSegment.hpp</includedby>
    <includedby refid="Spiral_8cpp" local="yes">src/segment/Spiral.cpp</includedby>
    <incdepgraph>
      <node id="476">
        <label>src/segment/Spiral.hpp</label>
        <link refid="Spiral_8hpp"/>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
      </node>
      <node id="478">
        <label>cmath</label>
      </node>
      <node id="477">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structSpiralPoint" prot="public">SpiralPoint</innerclass>
    <innerclass refid="structNoteName" prot="public">NoteName</innerclass>
    <innernamespace refid="namespaceSpiral">Spiral</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__segment_1gaf9d08e42ae7632f815ad7bd3c093b497" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const SpiralPoint &amp;lhs, const SpiralPoint &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="56" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1ga0b4ffecf00942ad046a9ea6785319f6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const SpiralPoint &amp;lhs, const SpiralPoint &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="64" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1gab3a698d42f743ce361da6916209eca88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const SpiralPoint &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="70" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="70" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1gaeba3d7c6ab7481a52f2cd4ce980c08ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const NoteName &amp;lhs, const NoteName &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structNoteName" kindref="compound">NoteName</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structNoteName" kindref="compound">NoteName</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="159" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="159" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1ga7c5e53ea6aa75682a2320bdf2f6f17fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const NoteName &amp;lhs, const NoteName &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structNoteName" kindref="compound">NoteName</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structNoteName" kindref="compound">NoteName</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="168" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1ga696a465764983bfca52bcd6406e373f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const NoteName &amp;p)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="structNoteName" kindref="compound">NoteName</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="173" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="173" bodyend="185"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/segment/Spiral.hpp"/>
  </compounddef>
</doxygen>
