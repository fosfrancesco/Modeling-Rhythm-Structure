<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classRational" kind="class" language="C++" prot="public">
    <compoundname>Rational</compoundname>
    <includes local="no">Rational.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classRational_1a955d0d3f6862a1ecefc57e5d5ca8f66f" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long Rational::num</definition>
        <argsstring></argsstring>
        <name>num</name>
        <briefdescription>
<para>numerator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="129" column="1" bodyfile="src/general/Rational.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRational_1a0035ce5b26ada7807124c99142be9ed6" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long Rational::den</definition>
        <argsstring></argsstring>
        <name>den</name>
        <briefdescription>
<para>denominator (keep &gt; 0!) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="132" column="1" bodyfile="src/general/Rational.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classRational_1a3bbd6ff67c590da76ddfcbd48cd3de0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Rational::Rational</definition>
        <argsstring>()</argsstring>
        <name>Rational</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="77" column="1" bodyfile="src/general/Rational.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga664c91d4ee5ad46c39e765e6dbf81738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rational::Rational</definition>
        <argsstring>(long n, long d=1)</argsstring>
        <name>Rational</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <param>
          <type>long</type>
          <declname>d</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>default constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="80" column="1" bodyfile="src/general/Rational.cpp" bodystart="14" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classRational_1a6b1b6f2daa26e70c89c9af95ccd8db9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Rational::Rational</definition>
        <argsstring>(const Rational &amp;rhs)</argsstring>
        <name>Rational</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>copy constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="83" column="1" bodyfile="src/general/Rational.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classRational_1a3600b7a387a12c5ef3d8a2a34ebffc8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Rational::~Rational</definition>
        <argsstring>(void)</argsstring>
        <name>~Rational</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="85" column="1" bodyfile="src/general/Rational.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classRational_1a72439b140815591f5d970494602bb5ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long Rational::numerator</definition>
        <argsstring>(void) const</argsstring>
        <name>numerator</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="87" column="1" bodyfile="src/general/Rational.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classRational_1a291c66d689ce98e62a14babdd12894d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long Rational::denominator</definition>
        <argsstring>(void) const</argsstring>
        <name>denominator</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="88" column="1" bodyfile="src/general/Rational.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classRational_1a53d55d82fbde5bdd6deb7f7ff4310f92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Rational::null</definition>
        <argsstring>(void) const</argsstring>
        <name>null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="90" column="1" bodyfile="src/general/Rational.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classRational_1a1961c2ea3ed798d2c77a1294fa448164" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Rational::integral</definition>
        <argsstring>(void) const</argsstring>
        <name>integral</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="91" column="1" bodyfile="src/general/Rational.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga1f7f9f9491bbe7f24c488a505ac6887c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>Rational &amp; Rational::operator=</definition>
        <argsstring>(const Rational &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>assignment operators </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="94" column="1" bodyfile="src/general/Rational.hpp" bodystart="140" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga019d7a6ea6fb10e582310ae8f00a121c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>Rational &amp; Rational::operator=</definition>
        <argsstring>(long rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>long</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="95" column="1" bodyfile="src/general/Rational.hpp" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classRational_1a25ae5a95c48b8108c3c1337cec68b425" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>Rational Rational::operator+</definition>
        <argsstring>(void) const</argsstring>
        <name>operator+</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="98" column="1" bodyfile="src/general/Rational.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classRational_1a86b979ead01c9c4af10808259f86750d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>Rational Rational::operator-</definition>
        <argsstring>(void) const</argsstring>
        <name>operator-</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="99" column="1" bodyfile="src/general/Rational.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classRational_1ab2bd5760859089e81eb3d6ed98341432" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>Rational Rational::invert</definition>
        <argsstring>(void) const</argsstring>
        <name>invert</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="100" column="1" bodyfile="src/general/Rational.hpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaa857f0a929a6898f30b97ba00c463ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator+=</definition>
        <argsstring>(const Rational &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="103" column="1" bodyfile="src/general/Rational.cpp" bodystart="30" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga196f4fcc358d405bbd98a7248bfc75f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator-=</definition>
        <argsstring>(const Rational &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="104" column="1" bodyfile="src/general/Rational.cpp" bodystart="49" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga17205b7127a763b3eaf44f6fecaac50b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator*=</definition>
        <argsstring>(const Rational &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="105" column="1" bodyfile="src/general/Rational.cpp" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaa9902842b5b7724cd307b5770a75b0c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator/=</definition>
        <argsstring>(const Rational &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="106" column="1" bodyfile="src/general/Rational.cpp" bodystart="83" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gada510c5ee2bbcc7d7f12b8f25b539eff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator+=</definition>
        <argsstring>(long rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>long</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="107" column="1" bodyfile="src/general/Rational.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga33cc7c599a1a3ac9a13bfe104c4456f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator-=</definition>
        <argsstring>(long rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>long</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="108" column="1" bodyfile="src/general/Rational.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gae50b290ade4698dd865cd451c3c23dda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator*=</definition>
        <argsstring>(long rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>long</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="109" column="1" bodyfile="src/general/Rational.cpp" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaa6627aa1f4524568c059b8914b2665bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator/=</definition>
        <argsstring>(long rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>long</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="110" column="1" bodyfile="src/general/Rational.cpp" bodystart="97" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga23e1bd04a616269e833eabf12ebb247b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="113" column="1" bodyfile="src/general/Rational.cpp" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gace6087d7c3382a18099dda188d1e5d9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>const Rational Rational::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="114" column="1" bodyfile="src/general/Rational.cpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga46aa465b7b59fbdbc5abff452a713b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="115" column="1" bodyfile="src/general/Rational.cpp" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga45c0bd14078313e6ff7be68dd612efa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>const Rational Rational::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="116" column="1" bodyfile="src/general/Rational.cpp" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga11edcb2aed3334c33c9e962be2bda2fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rational::printint</definition>
        <argsstring>(std::ostream &amp;) const</argsstring>
        <name>printint</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>o</defname>
        </param>
        <briefdescription>
<para>print in format int+rat </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="123" column="1" bodyfile="src/general/Rational.cpp" bodystart="255" bodyend="274"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="group__general_1gac33fc7df4637c732fa9c9f9ff0ddce95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long Rational::gcd</definition>
        <argsstring>(long, long)</argsstring>
        <name>gcd</name>
        <param>
          <type>long</type>
          <defname>u</defname>
        </param>
        <param>
          <type>long</type>
          <defname>v</defname>
        </param>
        <briefdescription>
<para>auxillary helper function to normalize the rationals </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="135" column="1" bodyfile="src/general/Rational.cpp" bodystart="132" bodyend="149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class of rational numbers </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/general/Rational.hpp" line="75" column="1" bodyfile="src/general/Rational.hpp" bodystart="74" bodyend="136"/>
    <listofallmembers>
      <member refid="classRational_1a0035ce5b26ada7807124c99142be9ed6" prot="private" virt="non-virtual"><scope>Rational</scope><name>den</name></member>
      <member refid="classRational_1a291c66d689ce98e62a14babdd12894d8" prot="public" virt="non-virtual"><scope>Rational</scope><name>denominator</name></member>
      <member refid="group__general_1gac33fc7df4637c732fa9c9f9ff0ddce95" prot="private" virt="non-virtual"><scope>Rational</scope><name>gcd</name></member>
      <member refid="classRational_1a1961c2ea3ed798d2c77a1294fa448164" prot="public" virt="non-virtual"><scope>Rational</scope><name>integral</name></member>
      <member refid="classRational_1ab2bd5760859089e81eb3d6ed98341432" prot="public" virt="non-virtual"><scope>Rational</scope><name>invert</name></member>
      <member refid="classRational_1a53d55d82fbde5bdd6deb7f7ff4310f92" prot="public" virt="non-virtual"><scope>Rational</scope><name>null</name></member>
      <member refid="classRational_1a955d0d3f6862a1ecefc57e5d5ca8f66f" prot="private" virt="non-virtual"><scope>Rational</scope><name>num</name></member>
      <member refid="classRational_1a72439b140815591f5d970494602bb5ad" prot="public" virt="non-virtual"><scope>Rational</scope><name>numerator</name></member>
      <member refid="group__general_1ga17205b7127a763b3eaf44f6fecaac50b" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator*=</name></member>
      <member refid="group__general_1gae50b290ade4698dd865cd451c3c23dda" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator*=</name></member>
      <member refid="classRational_1a25ae5a95c48b8108c3c1337cec68b425" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator+</name></member>
      <member refid="group__general_1ga23e1bd04a616269e833eabf12ebb247b" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator++</name></member>
      <member refid="group__general_1gace6087d7c3382a18099dda188d1e5d9c" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator++</name></member>
      <member refid="group__general_1gaa857f0a929a6898f30b97ba00c463ae6" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator+=</name></member>
      <member refid="group__general_1gada510c5ee2bbcc7d7f12b8f25b539eff" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator+=</name></member>
      <member refid="classRational_1a86b979ead01c9c4af10808259f86750d" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator-</name></member>
      <member refid="group__general_1ga46aa465b7b59fbdbc5abff452a713b3c" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator--</name></member>
      <member refid="group__general_1ga45c0bd14078313e6ff7be68dd612efa1" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator--</name></member>
      <member refid="group__general_1ga196f4fcc358d405bbd98a7248bfc75f5" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator-=</name></member>
      <member refid="group__general_1ga33cc7c599a1a3ac9a13bfe104c4456f4" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator-=</name></member>
      <member refid="group__general_1gaa9902842b5b7724cd307b5770a75b0c7" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator/=</name></member>
      <member refid="group__general_1gaa6627aa1f4524568c059b8914b2665bc" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator/=</name></member>
      <member refid="group__general_1ga1f7f9f9491bbe7f24c488a505ac6887c" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator=</name></member>
      <member refid="group__general_1ga019d7a6ea6fb10e582310ae8f00a121c" prot="public" virt="non-virtual"><scope>Rational</scope><name>operator=</name></member>
      <member refid="group__general_1ga11edcb2aed3334c33c9e962be2bda2fe" prot="public" virt="non-virtual"><scope>Rational</scope><name>printint</name></member>
      <member refid="classRational_1a3bbd6ff67c590da76ddfcbd48cd3de0a" prot="public" virt="non-virtual"><scope>Rational</scope><name>Rational</name></member>
      <member refid="group__general_1ga664c91d4ee5ad46c39e765e6dbf81738" prot="public" virt="non-virtual"><scope>Rational</scope><name>Rational</name></member>
      <member refid="classRational_1a6b1b6f2daa26e70c89c9af95ccd8db9f" prot="public" virt="non-virtual"><scope>Rational</scope><name>Rational</name></member>
      <member refid="classRational_1a3600b7a387a12c5ef3d8a2a34ebffc8d" prot="public" virt="non-virtual"><scope>Rational</scope><name>~Rational</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
