<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group__general" kind="group">
    <compoundname>general</compoundname>
    <title>General module</title>
    <innerclass refid="classRational" prot="public">Rational</innerclass>
    <innerclass refid="classstd_1_1hash_3_01Rational_01_4" prot="public">std::hash&lt; Rational &gt;</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
    <innernamespace refid="namespacepatch">patch</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__general_1gae07bdce6f4896785ead3b815ca6ab560" prot="public" static="no" strong="yes">
        <type></type>
        <name>WeightDom</name>
        <enumvalue id="group__general_1ggae07bdce6f4896785ead3b815ca6ab560ab3f7791472924b0d1530bb9112409c01" prot="public">
          <name>UNDEF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__general_1ggae07bdce6f4896785ead3b815ca6ab560a0e9bc37ec6da933200c9464b9585415e" prot="public">
          <name>PENALTY</name>
          <briefdescription>
<para>to be specified </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__general_1ggae07bdce6f4896785ead3b815ca6ab560aefc3ccac9f36534e7235c64ca7e56a1e" prot="public">
          <name>STOCHASTIC</name>
          <briefdescription>
<para>tropical semiring </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__general_1ggae07bdce6f4896785ead3b815ca6ab560aa5fa48e29b30e37389febd475c4c866a" prot="public">
          <name>COUNTING</name>
          <briefdescription>
<para>Viterbi semiring. </para>
          </briefdescription>
          <detaileddescription>
<para>int vectors for corpus stat </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>weight types </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="40" column="1" bodyfile="src/general/init.hpp" bodystart="39" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__general_1ga092fe8b972dfa977c2a0886720a7731e" prot="public" static="no">
        <type>long</type>
        <definition>typedef long pre_t</definition>
        <argsstring></argsstring>
        <name>pre_t</name>
        <briefdescription>
<para>type for pre post values in Runs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="34" column="1" bodyfile="src/general/init.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__general_1gac3b19762b16f33de03662fd4289fe5a9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int EVENTNB_UNKNOWN</definition>
        <argsstring></argsstring>
        <name>EVENTNB_UNKNOWN</name>
        <initializer>= -1</initializer>
        <briefdescription>
<para>type for MIDI event numbers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="21" column="1" bodyfile="src/general/init.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gae862a9d955eb3154601efb64980ac24b" prot="public" static="no" mutable="no">
        <type><ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>Rational MUSTIME_UNKNOWN</definition>
        <argsstring></argsstring>
        <name>MUSTIME_UNKNOWN</name>
        <initializer>= <ref refid="classRational" kindref="compound">Rational</ref>(-1)</initializer>
        <briefdescription>
<para>type for musical time values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="23" column="1" bodyfile="src/general/init.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gab5f3e741743d1273f9b9219e7f3c6845" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long MUSPOINTREF_NULL</definition>
        <argsstring></argsstring>
        <name>MUSPOINTREF_NULL</name>
        <initializer>= LONG_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="25" column="1" bodyfile="src/general/init.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga5fbff41194dc7e48cea03604b5d7a060" prot="public" static="no" mutable="no">
        <type><ref refid="group__general_1gae07bdce6f4896785ead3b815ca6ab560" kindref="member">WeightDom</ref></type>
        <definition>WeightDom CST_WEIGHT_TYPE</definition>
        <argsstring></argsstring>
        <name>CST_WEIGHT_TYPE</name>
        <initializer>= WeightDom::UNDEF</initializer>
        <briefdescription>
<para>weight type. value specified in grammar file or default value WeightDom::UNDEF </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="27" column="1" bodyfile="src/general/init.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga942f8553c6b44bf0ed10f6c167794e89" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long CST_MAX_GRACE</definition>
        <argsstring></argsstring>
        <name>CST_MAX_GRACE</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>max number of grace notes specified in grammar used for abstraction of terminal transition labels see Label.hpp value specified in grammar file or default 0 (there is no abstraction of labels) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="29" column="1" bodyfile="src/general/init.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga4f8704310ab1a776374c4103a70ee4ca" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CST_ALPHA</definition>
        <argsstring></argsstring>
        <name>CST_ALPHA</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
<para>coefficient for combining weight and distance in pernalty weight model </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="31" column="1" bodyfile="src/general/init.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gae30e96a43768e59d69b30739bca4b2a0" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CST_SIGMA2</definition>
        <argsstring></argsstring>
        <name>CST_SIGMA2</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
<para>constant for computing performance weight see PerformanceModel.hpp </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="33" column="1" bodyfile="src/general/init.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga9ba08947d7e5ebba9df19496146a1bd4" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long MAX_AR</definition>
        <argsstring></argsstring>
        <name>MAX_AR</name>
        <initializer>= 13</initializer>
        <briefdescription>
<para>symbols for labeling RT and <ref refid="classWTA" kindref="compound">WTA</ref> terminal transitions max arity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="35" column="1" bodyfile="src/general/init.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gaa0818f0d579fa65f854f7540dab4d258" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CST_PRECISION</definition>
        <argsstring></argsstring>
        <name>CST_PRECISION</name>
        <initializer>= 0.0000001</initializer>
        <briefdescription>
<para>precision for floting point unit calculations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="37" column="1" bodyfile="src/general/init.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gae18ed995d696579fcc6018d8e9993e65" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long HASH_SEED</definition>
        <argsstring></argsstring>
        <name>HASH_SEED</name>
        <initializer>= 1009</initializer>
        <briefdescription>
<para>hash function parameters Bernstein hash <ulink url="http://www.eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx">http://www.eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx</ulink> see also Josh Bloch, Effective Java see <ulink url="http://stackoverflow.com/a/1646913/126995">http://stackoverflow.com/a/1646913/126995</ulink> and also <ulink url="http://stackoverflow.com/questions/17016175">http://stackoverflow.com/questions/17016175</ulink> </para>
        </briefdescription>
        <detaileddescription>
<para>see also <ulink url="https://stackoverflow.com/a/1646913/6930643">https://stackoverflow.com/a/1646913/6930643</ulink> constexpr int HASH_SEED = 17; constexpr int HASH_FACTOR = 31; see also <ulink url="https://stackoverflow.com/a/34006336/6930643">https://stackoverflow.com/a/34006336/6930643</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="39" column="1" bodyfile="src/general/init.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga38297772685de12449644c49b20213d3" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long HASH_FACTOR</definition>
        <argsstring></argsstring>
        <name>HASH_FACTOR</name>
        <initializer>= 9176</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="40" column="1" bodyfile="src/general/init.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga75258703c393347e8c7af15041e0e7d2" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OPT_RUN_DUR</definition>
        <argsstring></argsstring>
        <name>OPT_RUN_DUR</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>optimization flag compute the duration sequences of runs. if unset, OPT_RUN_UNIT must be automatically unset value specified in ini file or default: true </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="45" column="1" bodyfile="src/general/init.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gaf2f921cdceea999adbede3b238fbd924" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OPT_RUN_STRICT</definition>
        <argsstring></argsstring>
        <name>OPT_RUN_STRICT</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>optimization flag compute at most one best run for a duration sequence in each record. it is the first best run added, i.e. the best with that duration sequence. OPT_RUN_DUR must be set. value specified in ini file or default: false </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="47" column="1" bodyfile="src/general/init.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gaf43b37abf039bc3d2e67681387760de6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OPT_RUN_UNIT</definition>
        <argsstring></argsstring>
        <name>OPT_RUN_UNIT</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>optimization flag do not add non-terminal runs with duration sequences of the form [0…0, 1]. they correspond to reducible runs of the form p(x, _,…, _) where x is a leaf and _ is a continuation (tie). OPT_RUN_DUR must be set. value specified in ini file or default: true </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="49" column="1" bodyfile="src/general/init.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga4445e6f07c267b6c601d33f1bf23ad2c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OPT_NOREST</definition>
        <argsstring></argsstring>
        <name>OPT_NOREST</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>option flag ignore rests in MIDI input file where a rest is the duration between a note off and the next note on msg. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="51" column="1" bodyfile="src/general/init.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gac3b19762b16f33de03662fd4289fe5a9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int EVENTNB_UNKNOWN</definition>
        <argsstring></argsstring>
        <name>EVENTNB_UNKNOWN</name>
        <briefdescription>
<para>type for MIDI event numbers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="26" column="1" bodyfile="src/general/init.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gae862a9d955eb3154601efb64980ac24b" prot="public" static="no" mutable="no">
        <type><ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>Rational MUSTIME_UNKNOWN</definition>
        <argsstring></argsstring>
        <name>MUSTIME_UNKNOWN</name>
        <briefdescription>
<para>type for musical time values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="29" column="1" bodyfile="src/general/init.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gab5f3e741743d1273f9b9219e7f3c6845" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long MUSPOINTREF_NULL</definition>
        <argsstring></argsstring>
        <name>MUSPOINTREF_NULL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="31" column="1" bodyfile="src/general/init.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga5fbff41194dc7e48cea03604b5d7a060" prot="public" static="no" mutable="no">
        <type><ref refid="group__general_1gae07bdce6f4896785ead3b815ca6ab560" kindref="member">WeightDom</ref></type>
        <definition>WeightDom CST_WEIGHT_TYPE</definition>
        <argsstring></argsstring>
        <name>CST_WEIGHT_TYPE</name>
        <briefdescription>
<para>weight type. value specified in grammar file or default value WeightDom::UNDEF </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="60" column="1" bodyfile="src/general/init.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga942f8553c6b44bf0ed10f6c167794e89" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long CST_MAX_GRACE</definition>
        <argsstring></argsstring>
        <name>CST_MAX_GRACE</name>
        <briefdescription>
<para>max number of grace notes specified in grammar used for abstraction of terminal transition labels see Label.hpp value specified in grammar file or default 0 (there is no abstraction of labels) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="67" column="1" bodyfile="src/general/init.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga4f8704310ab1a776374c4103a70ee4ca" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CST_ALPHA</definition>
        <argsstring></argsstring>
        <name>CST_ALPHA</name>
        <briefdescription>
<para>coefficient for combining weight and distance in pernalty weight model </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="70" column="1" bodyfile="src/general/init.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gae30e96a43768e59d69b30739bca4b2a0" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CST_SIGMA2</definition>
        <argsstring></argsstring>
        <name>CST_SIGMA2</name>
        <briefdescription>
<para>constant for computing performance weight see PerformanceModel.hpp </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="74" column="1" bodyfile="src/general/init.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga9ba08947d7e5ebba9df19496146a1bd4" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long MAX_AR</definition>
        <argsstring></argsstring>
        <name>MAX_AR</name>
        <briefdescription>
<para>symbols for labeling RT and <ref refid="classWTA" kindref="compound">WTA</ref> terminal transitions max arity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="78" column="1" bodyfile="src/general/init.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gaa0818f0d579fa65f854f7540dab4d258" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CST_PRECISION</definition>
        <argsstring></argsstring>
        <name>CST_PRECISION</name>
        <briefdescription>
<para>precision for floting point unit calculations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="81" column="1" bodyfile="src/general/init.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gae18ed995d696579fcc6018d8e9993e65" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long HASH_SEED</definition>
        <argsstring></argsstring>
        <name>HASH_SEED</name>
        <briefdescription>
<para>hash function parameters Bernstein hash <ulink url="http://www.eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx">http://www.eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx</ulink> see also Josh Bloch, Effective Java see <ulink url="http://stackoverflow.com/a/1646913/126995">http://stackoverflow.com/a/1646913/126995</ulink> and also <ulink url="http://stackoverflow.com/questions/17016175">http://stackoverflow.com/questions/17016175</ulink> </para>
        </briefdescription>
        <detaileddescription>
<para>see also <ulink url="https://stackoverflow.com/a/1646913/6930643">https://stackoverflow.com/a/1646913/6930643</ulink> constexpr int HASH_SEED = 17; constexpr int HASH_FACTOR = 31; see also <ulink url="https://stackoverflow.com/a/34006336/6930643">https://stackoverflow.com/a/34006336/6930643</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="94" column="1" bodyfile="src/general/init.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga38297772685de12449644c49b20213d3" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long HASH_FACTOR</definition>
        <argsstring></argsstring>
        <name>HASH_FACTOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="95" column="1" bodyfile="src/general/init.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gaf2f921cdceea999adbede3b238fbd924" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OPT_RUN_STRICT</definition>
        <argsstring></argsstring>
        <name>OPT_RUN_STRICT</name>
        <briefdescription>
<para>optimization flag compute at most one best run for a duration sequence in each record. it is the first best run added, i.e. the best with that duration sequence. OPT_RUN_DUR must be set. value specified in ini file or default: false </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="104" column="1" bodyfile="src/general/init.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gaf43b37abf039bc3d2e67681387760de6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OPT_RUN_UNIT</definition>
        <argsstring></argsstring>
        <name>OPT_RUN_UNIT</name>
        <briefdescription>
<para>optimization flag do not add non-terminal runs with duration sequences of the form [0…0, 1]. they correspond to reducible runs of the form p(x, _,…, _) where x is a leaf and _ is a continuation (tie). OPT_RUN_DUR must be set. value specified in ini file or default: true </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="113" column="1" bodyfile="src/general/init.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga75258703c393347e8c7af15041e0e7d2" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OPT_RUN_DUR</definition>
        <argsstring></argsstring>
        <name>OPT_RUN_DUR</name>
        <briefdescription>
<para>optimization flag compute the duration sequences of runs. if unset, OPT_RUN_UNIT must be automatically unset value specified in ini file or default: true </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="120" column="1" bodyfile="src/general/init.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga4445e6f07c267b6c601d33f1bf23ad2c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OPT_NOREST</definition>
        <argsstring></argsstring>
        <name>OPT_NOREST</name>
        <briefdescription>
<para>option flag ignore rests in MIDI input file where a rest is the duration between a note off and the next note on msg. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="125" column="1" bodyfile="src/general/init.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1ga94c56112daf0fd5ccea22ff040dab387" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto console</definition>
        <argsstring></argsstring>
        <name>console</name>
        <initializer>= spd::stdout_color_mt(&quot;console&quot;)</initializer>
        <briefdescription>
<para>Console logger with color const std::shared_ptr&lt;spd::logger&gt; console = spd::stdout_color_mt(&quot;console&quot;);. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.cpp" line="16" column="1" bodyfile="src/general/trace.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gac021c39dd4209cc19d4ec5049b3a94ec" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int TRACE_LEVEL</definition>
        <argsstring></argsstring>
        <name>TRACE_LEVEL</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>TBR </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="55" column="1" bodyfile="src/general/trace.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__general_1gad61df4571453c6f7c1c829265837e500" prot="public" static="no" mutable="no">
        <type>const std::shared_ptr&lt; spd::logger &gt;</type>
        <definition>const std::shared_ptr&lt;spd::logger&gt; console</definition>
        <argsstring></argsstring>
        <name>console</name>
        <briefdescription>
<para>Console logger with color const std::shared_ptr&lt;spd::logger&gt; console = spd::stdout_color_mt(&quot;console&quot;);. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="76" column="1" bodyfile="src/general/trace.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__general_1ga8ea30422b6f53a4d8e502ab0a1406dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double duration</definition>
        <argsstring>(clock_t start)</argsstring>
        <name>duration</name>
        <param>
          <type>clock_t</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="14" column="1" bodyfile="src/general/init.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaef0eb8293c9f09a03e431fa23dea831d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read_config</definition>
        <argsstring>(const std::string filename)</argsstring>
        <name>read_config</name>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>read the constant and optimisation flag values in a config file INI file, see <ulink url="https://en.wikipedia.org/wiki/INI_file">https://en.wikipedia.org/wiki/INI_file</ulink> return 0 if reading the values succeded -1 in case of file open error or a number of line in case of parse error in .ini file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="53" column="1" bodyfile="src/general/init.cpp" bodystart="53" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga7a50522782b1a61b37d5f1b3adceed4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const WeightDom &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="group__general_1gae07bdce6f4896785ead3b815ca6ab560" kindref="member">WeightDom</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.cpp" line="86" column="1" bodyfile="src/general/init.cpp" bodystart="86" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga3cef5c0e66f31aac9e01e5dfd9f3edc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long virtual_memory_size</definition>
        <argsstring>()</argsstring>
        <name>virtual_memory_size</name>
        <briefdescription>
<para>Here we check that the compile flags are set and correct: QP_PLATFORM = PLATFORM_xxx QP_TARGET = TARGET_xxx where the possibles values for PLATFORM_xxx (target platform) and TARGET_xxx (executable) are defined by compiler flags. </para>
        </briefdescription>
        <detaileddescription>
<para>in Xcode, the flags are defined. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/QPconfig.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gab4d9195d8e5dc86aa14c1eea0535d806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long resident_memory_size</definition>
        <argsstring>()</argsstring>
        <name>resident_memory_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/QPconfig.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaa0f924144ded8d6509d5d349195b00a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>const Rational operator+</definition>
        <argsstring>(const Rational &amp;lhs, const Rational &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="152" column="1" bodyfile="src/general/Rational.cpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga46d4a6e5db46addfa0d0608e3266571b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>const Rational operator-</definition>
        <argsstring>(const Rational &amp;lhs, const Rational &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="156" column="1" bodyfile="src/general/Rational.cpp" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga0334562ad4831b5b35238fe58bddabb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>const Rational operator*</definition>
        <argsstring>(const Rational &amp;lhs, const Rational &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="160" column="1" bodyfile="src/general/Rational.cpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gac87738e39a4f47b27c620375a59b06ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>const Rational operator/</definition>
        <argsstring>(const Rational &amp;lhs, const Rational &amp;rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="164" column="1" bodyfile="src/general/Rational.cpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga3a2f2c8e28386a081128d450e66999dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>Rational rabs</definition>
        <argsstring>(const Rational &amp;r)</argsstring>
        <name>rabs</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="168" column="1" bodyfile="src/general/Rational.cpp" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga436606f8682952468f6a5b339d972178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Rational &amp;lhs, const Rational &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="173" column="1" bodyfile="src/general/Rational.cpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaca39bd2856e9682cf97234d046c0d52f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Rational &amp;lhs, const Rational &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="178" column="1" bodyfile="src/general/Rational.cpp" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaf34fe75e417e48c51e1d2751d9264569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Rational &amp;lhs, const Rational &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="183" column="1" bodyfile="src/general/Rational.cpp" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga8ae410bb40221ea8f30a6057dff05a1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const Rational &amp;lhs, const Rational &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="187" column="1" bodyfile="src/general/Rational.cpp" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga7b99e5d0faa3459356ab1249e3315ceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const Rational &amp;lhs, const Rational &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="191" column="1" bodyfile="src/general/Rational.cpp" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gac1e651cdae26413046d477efdaef0539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const Rational &amp;lhs, const Rational &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="195" column="1" bodyfile="src/general/Rational.cpp" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga5cf9ab392de156c39a5a115c9b30607b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;ostr, const Rational &amp;r)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>ostr</declname>
        </param>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="199" column="1" bodyfile="src/general/Rational.cpp" bodystart="199" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaa682331c9d58a26ba320d6414d396a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;istr, Rational &amp;r)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>istr</declname>
        </param>
        <param>
          <type><ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="214" column="1" bodyfile="src/general/Rational.cpp" bodystart="214" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaf481924a0c90c92bbd4b49979e1bd83f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>static Rational toRational</definition>
        <argsstring>(double x, double limit, int iterations)</argsstring>
        <name>toRational</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>limit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iterations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="231" column="1" bodyfile="src/general/Rational.cpp" bodystart="231" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga0bfbe45cc727920e5a74e3a75ab2e6b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>Rational toRational</definition>
        <argsstring>(double x, int iterations=5)</argsstring>
        <name>toRational</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iterations</declname>
        </param>
        <briefdescription>
<para>double -&gt; <ref refid="classRational" kindref="compound">Rational</ref> conversion </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.cpp" line="243" column="1" bodyfile="src/general/Rational.cpp" bodystart="243" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga95b1b3230673ab78c01058a88a5e3eae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double toDouble</definition>
        <argsstring>(const Rational &amp;r)</argsstring>
        <name>toDouble</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para><ref refid="classRational" kindref="compound">Rational</ref> -&gt; double conversion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="155" column="1" bodyfile="src/general/Rational.hpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga2ae32e90a2bacd18ca646568cb6c456e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long trunc</definition>
        <argsstring>(const Rational &amp;r)</argsstring>
        <name>trunc</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para><ref refid="classRational" kindref="compound">Rational</ref> -&gt; long conversions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="161" column="1" bodyfile="src/general/Rational.hpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gab93ceb248e49c0c1bdf83bee735aea49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long floor</definition>
        <argsstring>(const Rational &amp;r)</argsstring>
        <name>floor</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="166" column="1" bodyfile="src/general/Rational.hpp" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga883dcb56e5cb54c652d0eb4e939fd066" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long ceil</definition>
        <argsstring>(const Rational &amp;r)</argsstring>
        <name>ceil</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="172" column="1" bodyfile="src/general/Rational.hpp" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga664c91d4ee5ad46c39e765e6dbf81738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rational::Rational</definition>
        <argsstring>(long n, long d=1)</argsstring>
        <name>Rational</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <param>
          <type>long</type>
          <declname>d</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>default constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="80" column="1" bodyfile="src/general/Rational.cpp" bodystart="14" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaa857f0a929a6898f30b97ba00c463ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator+=</definition>
        <argsstring>(const Rational &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="103" column="1" bodyfile="src/general/Rational.cpp" bodystart="30" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gada510c5ee2bbcc7d7f12b8f25b539eff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator+=</definition>
        <argsstring>(long rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>long</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="107" column="1" bodyfile="src/general/Rational.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga196f4fcc358d405bbd98a7248bfc75f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator-=</definition>
        <argsstring>(const Rational &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="104" column="1" bodyfile="src/general/Rational.cpp" bodystart="49" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga33cc7c599a1a3ac9a13bfe104c4456f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator-=</definition>
        <argsstring>(long rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>long</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="108" column="1" bodyfile="src/general/Rational.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga17205b7127a763b3eaf44f6fecaac50b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator*=</definition>
        <argsstring>(const Rational &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="105" column="1" bodyfile="src/general/Rational.cpp" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gae50b290ade4698dd865cd451c3c23dda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator*=</definition>
        <argsstring>(long rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>long</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="109" column="1" bodyfile="src/general/Rational.cpp" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaa9902842b5b7724cd307b5770a75b0c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator/=</definition>
        <argsstring>(const Rational &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="106" column="1" bodyfile="src/general/Rational.cpp" bodystart="83" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gaa6627aa1f4524568c059b8914b2665bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator/=</definition>
        <argsstring>(long rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>long</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="110" column="1" bodyfile="src/general/Rational.cpp" bodystart="97" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga23e1bd04a616269e833eabf12ebb247b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="113" column="1" bodyfile="src/general/Rational.cpp" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gace6087d7c3382a18099dda188d1e5d9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>const Rational Rational::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="114" column="1" bodyfile="src/general/Rational.cpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga46aa465b7b59fbdbc5abff452a713b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>const Rational &amp; Rational::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="115" column="1" bodyfile="src/general/Rational.cpp" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga45c0bd14078313e6ff7be68dd612efa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classRational" kindref="compound">Rational</ref></type>
        <definition>const Rational Rational::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="116" column="1" bodyfile="src/general/Rational.cpp" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1gac33fc7df4637c732fa9c9f9ff0ddce95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long Rational::gcd</definition>
        <argsstring>(long, long)</argsstring>
        <name>gcd</name>
        <param>
          <type>long</type>
          <defname>u</defname>
        </param>
        <param>
          <type>long</type>
          <defname>v</defname>
        </param>
        <briefdescription>
<para>auxillary helper function to normalize the rationals </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="135" column="1" bodyfile="src/general/Rational.cpp" bodystart="132" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga11edcb2aed3334c33c9e962be2bda2fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rational::printint</definition>
        <argsstring>(std::ostream &amp;) const</argsstring>
        <name>printint</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>o</defname>
        </param>
        <briefdescription>
<para>print in format int+rat </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="123" column="1" bodyfile="src/general/Rational.cpp" bodystart="255" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga1f7f9f9491bbe7f24c488a505ac6887c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>Rational &amp; Rational::operator=</definition>
        <argsstring>(const Rational &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>assignment operators </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="94" column="1" bodyfile="src/general/Rational.hpp" bodystart="140" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="group__general_1ga019d7a6ea6fb10e582310ae8f00a121c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classRational" kindref="compound">Rational</ref> &amp;</type>
        <definition>Rational &amp; Rational::operator=</definition>
        <argsstring>(long rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>long</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/Rational.hpp" line="95" column="1" bodyfile="src/general/Rational.hpp" bodystart="147" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__general_1ga93c3f96b8b7345e4e15965f3938e4e0c" prot="public" static="no">
        <name>PP_UNKNOWN</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="35" column="9" bodyfile="src/general/init.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1ga3f9e0147289a89265d742be9ea145fda" prot="public" static="no">
        <name>PP_KNOWN</name>
        <param><defname>x</defname></param>
        <initializer>(x &gt;= 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/init.hpp" line="36" column="9" bodyfile="src/general/init.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1ga047013f5273eccbbfc0a08db5975f544" prot="public" static="no">
        <name>TRACE_ON</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="57" column="9" bodyfile="src/general/trace.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1ga911d91f7898a9a0c4e35bb71e01d39a0" prot="public" static="no">
        <name>DEBUG_ON</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="58" column="9" bodyfile="src/general/trace.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1ga6745ebbbc3fb31c4d8ac57a551060028" prot="public" static="no">
        <name>_TRACE_CAND</name>
        <initializer>1</initializer>
        <briefdescription>
<para>addition of candidates </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="63" column="9" bodyfile="src/general/trace.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1ga5a81e12e5b011ad54d8ddbf6be97ef34" prot="public" static="no">
        <name>_TRACE_BEST</name>
        <briefdescription>
<para>addition of best runs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="66" column="9" bodyfile="src/general/trace.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1gad8cbb5acc06d85c055ae6d66d22b6b58" prot="public" static="no">
        <name>_TRACE_TBL</name>
        <briefdescription>
<para>initialization and construction of tables </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="69" column="9" bodyfile="src/general/trace.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1ga02ce8a968600d004ba60858425c46307" prot="public" static="no">
        <name>ERROR</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="group__general_1gad61df4571453c6f7c1c829265837e500" kindref="member">console</ref>-&gt;error(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="78" column="9" bodyfile="src/general/trace.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1ga8f75b971030a39ef811d3526a62b36b8" prot="public" static="no">
        <name>WARN</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="group__general_1gad61df4571453c6f7c1c829265837e500" kindref="member">console</ref>-&gt;warn(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="79" column="9" bodyfile="src/general/trace.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1gaedf01192151e10a6620567952711ff69" prot="public" static="no">
        <name>INFO</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="group__general_1gad61df4571453c6f7c1c829265837e500" kindref="member">console</ref>-&gt;info(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="80" column="9" bodyfile="src/general/trace.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1ga5f6aa8edcd99914757600b5d3b259bb7" prot="public" static="no">
        <name>TRACE</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="group__general_1gad61df4571453c6f7c1c829265837e500" kindref="member">console</ref>-&gt;trace(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="85" column="9" bodyfile="src/general/trace.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1ga96dd473db0b3d10bd43390cdacb00120" prot="public" static="no">
        <name>DEBUG</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="group__general_1gad61df4571453c6f7c1c829265837e500" kindref="member">console</ref>-&gt;debug(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="91" column="9" bodyfile="src/general/trace.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1gab69defacb6a9bf736bb490f7f44e25c3" prot="public" static="no">
        <name>TRACE_CAND</name>
        <param><defname>...</defname></param>
        <initializer>TRACE(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="97" column="9" bodyfile="src/general/trace.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1gaf4ce41dddbcee02dfa738a7d421e8037" prot="public" static="no">
        <name>TRACE_BEST</name>
        <param><defname>...</defname></param>
        <initializer>TRACE(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="103" column="9" bodyfile="src/general/trace.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__general_1ga822ec6b7ee1991956603623096cb09b2" prot="public" static="no">
        <name>TRACE_TBL</name>
        <param><defname>...</defname></param>
        <initializer>TRACE(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/general/trace.hpp" line="109" column="9" bodyfile="src/general/trace.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <computeroutput>general</computeroutput> module contains reusable tools and utilities, initialization of constants, and tracing functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
