<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="md_src_parsers_README" kind="page">
    <compoundname>md_src_parsers_README</compoundname>
    <title>src/parsers</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <computeroutput>parser</computeroutput> class defines a running environement for transcription by parsing for a given <computeroutput>input</computeroutput>. It assembles elements from the <computeroutput>table</computeroutput> directory for the construction of a table used to compute a tree from a <computeroutput>grammar</computeroutput> and some <computeroutput>input</computeroutput>.</para>
<para>Each <computeroutput>parser</computeroutput> class may contain a <computeroutput>demo</computeroutput> fonction to be called in a target.</para>
<para>The following <computeroutput>parsers</computeroutput> have been implemented:</para>
<para><itemizedlist>
<listitem><para><computeroutput>Inputless1best</computeroutput> : compute the 1-best tree of a <computeroutput><ref refid="classWTA" kindref="compound">WTA</ref></computeroutput>. no input segment.</para>
</listitem><listitem><para><computeroutput>Inputlesskbest</computeroutput> : compute the k best trees of a <computeroutput><ref refid="classWTA" kindref="compound">WTA</ref></computeroutput>. no input segment.</para>
</listitem><listitem><para><computeroutput>1bar1bestSIP</computeroutput> : computing the 1-best tree in a given <computeroutput><ref refid="classWTA" kindref="compound">WTA</ref></computeroutput> language for the transcription of a given input segment. If the <ref refid="classWTA" kindref="compound">WTA</ref> trees represent 1 bar, this scenario is transcription of the whole segment as a single bar.</para>
</listitem><listitem><para><computeroutput>1barkbestSKIP</computeroutput> : computing the k best trees in a given <computeroutput><ref refid="classWTA" kindref="compound">WTA</ref></computeroutput> language for the transcription of a given input segment.</para>
</listitem><listitem><para><computeroutput>Multibar1bestSIPBU</computeroutput> : 1-best parsing with <computeroutput>SIP</computeroutput> pointers. Process input as multiple bars, where a sequence of bars is represented by a binary tree (meta-run), constructed in a bottom-up fashion:</para>
</listitem></itemizedlist>
</para>
<para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[bars<sp/>1-n]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[bars<sp/>1-(n-1)]<sp/><sp/><sp/>bar<sp/>m</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[bars<sp/>1-2]<sp/><sp/><sp/>bar3</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[bars<sp/>1]<sp/><sp/><sp/>bar2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>/<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline><highlight class="normal">[<sp/>]<sp/><sp/><sp/>bar1</highlight></codeline>
</programlisting></para>
<para>Every node corresponds to a SIP pointer. The nodes <computeroutput>p1</computeroutput>, <computeroutput>p2</computeroutput> immediately below a node <computeroutput>p</computeroutput> represent a binary run <computeroutput>(p1, p2)</computeroutput> in the table entry for <computeroutput>p</computeroutput>. The pointers in <computeroutput>[ ]</computeroutput> correspond to several bars (meta pointers), they do have a non-WTA state. Every other pointer correspond to a single bar, with the initial <ref refid="classWTA" kindref="compound">WTA</ref> state (and contain a best run for that bar).</para>
<para>It is assumed that the number of bars is known and the bar length is fixed (tempo does not vary from bar to bar).</para>
<para>This parser can be used for online (bar by bar) transcription.</para>
<para><itemizedlist>
<listitem><para><computeroutput>Multibar1bestSIPflat</computeroutput> : same as above but the sequence of bars is represented by a tuple (flat tree), constructed from left to right.</para>
</listitem></itemizedlist>
</para>
<para><programlisting><codeline><highlight class="normal"><sp/>[bars<sp/>1-n]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>/<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline><highlight class="normal">bar1<sp/>...<sp/>bar<sp/>m</highlight></codeline>
</programlisting></para>
<para>Every node correspond to a SIP pointer. The top note correspond to the whole segment (meta pointer for all bars) Every node below correspond to a single bar, with the initial <ref refid="classWTA" kindref="compound">WTA</ref> state (and contain a best run for that bar). This parser cannot be used for online transcription.</para>
<para>This parser is very inefficient with constraint solving (in <ref refid="classTable" kindref="compound">Table</ref>) for pre, post values - need to store an exponential number of partial runs. The BU version is more efficient - with more compact representation of partial runs. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
