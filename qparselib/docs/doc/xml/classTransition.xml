<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classTransition" kind="class" language="C++" prot="public">
    <compoundname>Transition</compoundname>
    <includes local="no">Transition.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTransition_1a627eaf33ce650d90a92941e6d820c089" prot="private" static="no" mutable="no">
        <type>std::vector&lt; state_t &gt;</type>
        <definition>std::vector&lt;state_t&gt; Transition::_body</definition>
        <argsstring></argsstring>
        <name>_body</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="152" column="1" bodyfile="src/schemata/Transition.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransition_1a47f6572b3e2aecb9a9785296e37189f7" prot="private" static="no" mutable="no">
        <type><ref refid="classWeight" kindref="compound">Weight</ref></type>
        <definition>Weight Transition::_weight</definition>
        <argsstring></argsstring>
        <name>_weight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="153" column="1" bodyfile="src/schemata/Transition.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransition_1ac4379f6c424c68750bae739db7c84cd7" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Transition::_id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
<para>the id of transition is rceated automatically. it reflects the order of creation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="157" column="1" bodyfile="src/schemata/Transition.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="group__schemata_1ga4b6105765ff8f1f55caf70521664de8f" prot="private" static="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t Transition::_cpt</definition>
        <argsstring></argsstring>
        <name>_cpt</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>counter for the creation of transition&apos;s ids. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="160" column="1" bodyfile="src/schemata/Transition.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__schemata_1ga73b44b2338b11807f77b620a3e810f92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Transition::Transition</definition>
        <argsstring>()</argsstring>
        <name>Transition</name>
        <briefdescription>
<para>transition with unknown weight and empty body. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="61" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga6e08e637325ab62ee6bfbdb99c8f8a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Transition::Transition</definition>
        <argsstring>(const Weight &amp;)</argsstring>
        <name>Transition</name>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <defname>w</defname>
        </param>
        <briefdescription>
<para><ref refid="classTransition" kindref="compound">Transition(w)</ref> creates a transition with weight a copy of w and empty body. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>the letter weight in the envelop w is cloned </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="70" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga09dca130387fcf6ead3f80cc523a59de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Transition::Transition</definition>
        <argsstring>(LetterWeight *)</argsstring>
        <name>Transition</name>
        <param>
          <type><ref refid="classLetterWeight" kindref="compound">LetterWeight</ref> *</type>
          <defname>lw</defname>
        </param>
        <briefdescription>
<para><ref refid="classTransition" kindref="compound">Transition(lw)</ref> creates a transition with weight a wrapper of the letter lw (must be non null) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="74" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="34" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1gad126f7c68acac0315b1782decaf54d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Transition::Transition</definition>
        <argsstring>(std::vector&lt; state_t &gt;, const Weight &amp;)</argsstring>
        <name>Transition</name>
        <param>
          <type>std::vector&lt; state_t &gt;</type>
          <defname>v</defname>
        </param>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <defname>w</defname>
        </param>
        <briefdescription>
<para><ref refid="classTransition" kindref="compound">Transition(v, w)</ref> creates a transition with weight a copy of w and body a copy of the vector v. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>the letter weight in the envelop w is cloned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="80" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="43" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga50836c0d84b3968b9ceb968521418e22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Transition::Transition</definition>
        <argsstring>(std::vector&lt; state_t &gt;, LetterWeight *)</argsstring>
        <name>Transition</name>
        <param>
          <type>std::vector&lt; state_t &gt;</type>
          <defname>v</defname>
        </param>
        <param>
          <type><ref refid="classLetterWeight" kindref="compound">LetterWeight</ref> *</type>
          <defname>lw</defname>
        </param>
        <briefdescription>
<para><ref refid="classTransition" kindref="compound">Transition(v, lw)</ref> creates a transition with weight a wrapper of the letter lw (must be non null) and body a copy of the vector v. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="85" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="52" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga3c71fb93c73a755408cc963975d4ffa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Transition::Transition</definition>
        <argsstring>(state_t, const Weight &amp;)</argsstring>
        <name>Transition</name>
        <param>
          <type>state_t</type>
          <defname>s</defname>
        </param>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <defname>w</defname>
        </param>
        <briefdescription>
<para><ref refid="classTransition" kindref="compound">Transition(s, w)</ref> creates a transition with weight a copy of w and body (of size 1) the singleton (s) (terminal symbol). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>the letter weight in the envelop w is cloned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="91" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="62" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga458b953211e3b5de292c8c1535ff7281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Transition::Transition</definition>
        <argsstring>(state_t, LetterWeight *)</argsstring>
        <name>Transition</name>
        <param>
          <type>state_t</type>
          <defname>s</defname>
        </param>
        <param>
          <type><ref refid="classLetterWeight" kindref="compound">LetterWeight</ref> *</type>
          <defname>lw</defname>
        </param>
        <briefdescription>
<para><ref refid="classTransition" kindref="compound">Transition(s, lw)</ref> creates a transition with weight a wrapper of the letter lw (must be non null) and body (of size 1) the singleton (s) (terminal symbol). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="96" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="71" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1gab66e8623f23c71cd4f07c69596427bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Transition::~Transition</definition>
        <argsstring>()</argsstring>
        <name>~Transition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="100" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1gaeb18d5879ecb7757b5e783866c3e6084" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Transition::inner</definition>
        <argsstring>() const</argsstring>
        <name>inner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="102" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga1191490a05cc7d04a9933e5d84ca9fcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Transition::terminal</definition>
        <argsstring>() const</argsstring>
        <name>terminal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="104" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classTransition_1a77ab4e74f63933f38c6e2f8d875b6481" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Transition::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="106" column="1" bodyfile="src/schemata/Transition.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga97dce48d13fac75a4a444a68aae07608" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
        <definition>label_t Transition::label</definition>
        <argsstring>() const</argsstring>
        <name>label</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>this transition must be terminal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="109" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classTransition_1a14627398184e9a306cd3e7770a90dd80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classWeight" kindref="compound">Weight</ref></type>
        <definition>Weight Transition::weight</definition>
        <argsstring>() const</argsstring>
        <name>weight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="111" column="1" bodyfile="src/schemata/Transition.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classTransition_1a9430122ef00fdb0916a2c96d706345e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Transition::setWeight</definition>
        <argsstring>(const Weight &amp;w)</argsstring>
        <name>setWeight</name>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="112" column="1" bodyfile="src/schemata/Transition.hpp" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga6d7e864cf11645e39e3999516c2438f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Transition::scalar</definition>
        <argsstring>(double)</argsstring>
        <name>scalar</name>
        <param>
          <type>double</type>
          <defname>d</defname>
        </param>
        <briefdescription>
<para>modify weight of transition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="115" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga00585e8726be305c0a0d5b9af9c585b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Transition::invert</definition>
        <argsstring>()</argsstring>
        <name>invert</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="116" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga9e2e243bfa147bafd947f2cffd1da3ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>state_t</type>
        <definition>state_t Transition::at</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>at(i) returns the ith state in the body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an index of the body. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="120" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1gaacc3c061a48c15ce02b2ead05f9bb2bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Transition::push</definition>
        <argsstring>(state_t)</argsstring>
        <name>push</name>
        <param>
          <type>state_t</type>
          <defname>s</defname>
        </param>
        <briefdescription>
<para>add given state at the end of the body of this transition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="123" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga743ca128dc509e129a49d66500a0f151" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Transition::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>size of body. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="126" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="121" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1gad6ae5de36df4526b83bf7af59d178066" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Transition::arity</definition>
        <argsstring>() const</argsstring>
        <name>arity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="128" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="127" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classTransition_1a9bfff4ceb09c77df98c708c005bda5cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Transition_const_iterator</type>
        <definition>Transition_const_iterator Transition::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>iterator pointing to the first state in the body of the transition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="131" column="1" bodyfile="src/schemata/Transition.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classTransition_1a985c1d4cc1444ebb75e7703be48eb564" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Transition_const_iterator</type>
        <definition>Transition_const_iterator Transition::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>iterator pointing to the end of the body of the transition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="134" column="1" bodyfile="src/schemata/Transition.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1gab94ff39ee66515e72c1c52ba855508c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Transition::member</definition>
        <argsstring>(state_t) const</argsstring>
        <name>member</name>
        <param>
          <type>state_t</type>
          <defname>s</defname>
        </param>
        <briefdescription>
<para>whether the given state belongs to the body of this transition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="137" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="150" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga9719bf4a7c1e1ec8e0e1fceed8da0a11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Transition::allin</definition>
        <argsstring>(const std::set&lt; state_t &gt; &amp;) const</argsstring>
        <name>allin</name>
        <param>
          <type>const std::set&lt; state_t &gt; &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
<para>every state of the body is in the given set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="140" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="168" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga6bb49bac8dc5d5dbfb955b9eaea29276" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Transition::nonein</definition>
        <argsstring>(const std::set&lt; state_t &gt; &amp;) const</argsstring>
        <name>nonein</name>
        <param>
          <type>const std::set&lt; state_t &gt; &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
<para>no state of the body is in the given set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="143" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="183" bodyend="195"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classTransition_1ab24951c64864296cfb8a1dc4402a0f43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Transition &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>o</defname>
        </param>
        <param>
          <type>const <ref refid="classTransition" kindref="compound">Transition</ref> &amp;</type>
          <defname>t</defname>
        </param>
        <briefdescription>
<para>write content of body and weight to output stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/Transition.hpp" line="149" column="1" bodyfile="src/schemata/Transition.cpp" bodystart="199" bodyend="215"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>a <ref refid="classTransition" kindref="compound">Transition</ref> is defined by a sequence of antecedent states (body) the weight must be not null (null weight means a missing transition). </para>
    </briefdescription>
    <detaileddescription>
<para>a transition can be of two kinds:<itemizedlist>
<listitem><para>inner transition: the body has length &gt; 1 the arity is the length of the body</para>
</listitem><listitem><para>terminal (leaf) transition: the body has length 1 and contains a leaf label the arity is zero</para>
</listitem></itemizedlist>
</para>
<para>leaf label (terminal transitions): number of note + grace notes at (left of) current node 0 = continuation 1 = 1 note | rest (au + 1 note) 2 = 1 grace notes + 1 note 3 = 2 grace notes + 1 note etc <simplesect kind="see"><para><ref refid="classLabel" kindref="compound">Label</ref> for the functions managing these labels </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="src/schemata/Transition.hpp" line="57" column="1" bodyfile="src/schemata/Transition.hpp" bodystart="56" bodyend="161"/>
    <listofallmembers>
      <member refid="classTransition_1a627eaf33ce650d90a92941e6d820c089" prot="private" virt="non-virtual"><scope>Transition</scope><name>_body</name></member>
      <member refid="group__schemata_1ga4b6105765ff8f1f55caf70521664de8f" prot="private" virt="non-virtual"><scope>Transition</scope><name>_cpt</name></member>
      <member refid="classTransition_1ac4379f6c424c68750bae739db7c84cd7" prot="private" virt="non-virtual"><scope>Transition</scope><name>_id</name></member>
      <member refid="classTransition_1a47f6572b3e2aecb9a9785296e37189f7" prot="private" virt="non-virtual"><scope>Transition</scope><name>_weight</name></member>
      <member refid="group__schemata_1ga9719bf4a7c1e1ec8e0e1fceed8da0a11" prot="public" virt="non-virtual"><scope>Transition</scope><name>allin</name></member>
      <member refid="group__schemata_1gad6ae5de36df4526b83bf7af59d178066" prot="public" virt="non-virtual"><scope>Transition</scope><name>arity</name></member>
      <member refid="group__schemata_1ga9e2e243bfa147bafd947f2cffd1da3ec" prot="public" virt="non-virtual"><scope>Transition</scope><name>at</name></member>
      <member refid="classTransition_1a9bfff4ceb09c77df98c708c005bda5cb" prot="public" virt="non-virtual"><scope>Transition</scope><name>begin</name></member>
      <member refid="classTransition_1a985c1d4cc1444ebb75e7703be48eb564" prot="public" virt="non-virtual"><scope>Transition</scope><name>end</name></member>
      <member refid="classTransition_1a77ab4e74f63933f38c6e2f8d875b6481" prot="public" virt="non-virtual"><scope>Transition</scope><name>id</name></member>
      <member refid="group__schemata_1gaeb18d5879ecb7757b5e783866c3e6084" prot="public" virt="non-virtual"><scope>Transition</scope><name>inner</name></member>
      <member refid="group__schemata_1ga00585e8726be305c0a0d5b9af9c585b0" prot="public" virt="non-virtual"><scope>Transition</scope><name>invert</name></member>
      <member refid="group__schemata_1ga97dce48d13fac75a4a444a68aae07608" prot="public" virt="non-virtual"><scope>Transition</scope><name>label</name></member>
      <member refid="group__schemata_1gab94ff39ee66515e72c1c52ba855508c8" prot="public" virt="non-virtual"><scope>Transition</scope><name>member</name></member>
      <member refid="group__schemata_1ga6bb49bac8dc5d5dbfb955b9eaea29276" prot="public" virt="non-virtual"><scope>Transition</scope><name>nonein</name></member>
      <member refid="classTransition_1ab24951c64864296cfb8a1dc4402a0f43" prot="public" virt="non-virtual"><scope>Transition</scope><name>operator&lt;&lt;</name></member>
      <member refid="group__schemata_1gaacc3c061a48c15ce02b2ead05f9bb2bf" prot="public" virt="non-virtual"><scope>Transition</scope><name>push</name></member>
      <member refid="group__schemata_1ga6d7e864cf11645e39e3999516c2438f7" prot="public" virt="non-virtual"><scope>Transition</scope><name>scalar</name></member>
      <member refid="classTransition_1a9430122ef00fdb0916a2c96d706345e4" prot="public" virt="non-virtual"><scope>Transition</scope><name>setWeight</name></member>
      <member refid="group__schemata_1ga743ca128dc509e129a49d66500a0f151" prot="public" virt="non-virtual"><scope>Transition</scope><name>size</name></member>
      <member refid="group__schemata_1ga1191490a05cc7d04a9933e5d84ca9fcd" prot="public" virt="non-virtual"><scope>Transition</scope><name>terminal</name></member>
      <member refid="group__schemata_1ga73b44b2338b11807f77b620a3e810f92" prot="public" virt="non-virtual"><scope>Transition</scope><name>Transition</name></member>
      <member refid="group__schemata_1ga6e08e637325ab62ee6bfbdb99c8f8a71" prot="public" virt="non-virtual"><scope>Transition</scope><name>Transition</name></member>
      <member refid="group__schemata_1ga09dca130387fcf6ead3f80cc523a59de" prot="public" virt="non-virtual"><scope>Transition</scope><name>Transition</name></member>
      <member refid="group__schemata_1gad126f7c68acac0315b1782decaf54d3b" prot="public" virt="non-virtual"><scope>Transition</scope><name>Transition</name></member>
      <member refid="group__schemata_1ga50836c0d84b3968b9ceb968521418e22" prot="public" virt="non-virtual"><scope>Transition</scope><name>Transition</name></member>
      <member refid="group__schemata_1ga3c71fb93c73a755408cc963975d4ffa5" prot="public" virt="non-virtual"><scope>Transition</scope><name>Transition</name></member>
      <member refid="group__schemata_1ga458b953211e3b5de292c8c1535ff7281" prot="public" virt="non-virtual"><scope>Transition</scope><name>Transition</name></member>
      <member refid="classTransition_1a14627398184e9a306cd3e7770a90dd80" prot="public" virt="non-virtual"><scope>Transition</scope><name>weight</name></member>
      <member refid="group__schemata_1gab66e8623f23c71cd4f07c69596427bab" prot="public" virt="non-virtual"><scope>Transition</scope><name>~Transition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
