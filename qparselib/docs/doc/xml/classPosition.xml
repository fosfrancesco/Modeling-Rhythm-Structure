<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classPosition" kind="class" language="C++" prot="public">
    <compoundname>Position</compoundname>
    <includes local="no">RT.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classPosition_1afccdc3a3b6183af2b150c4672ccf4b2f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; Position::_content</definition>
        <argsstring></argsstring>
        <name>_content</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/RT.hpp" line="47" column="1" bodyfile="src/output/RT.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__output_1ga369a577425f8ba02e8750d04b6a088db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Position::Position</definition>
        <argsstring>()</argsstring>
        <name>Position</name>
        <briefdescription>
<para>empty sequence = root position </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/RT.hpp" line="32" column="1" bodyfile="src/output/RT.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga63750e368482cc5ef45180d3672b1c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Position::Position</definition>
        <argsstring>(const Position &amp;)</argsstring>
        <name>Position</name>
        <param>
          <type>const <ref refid="classPosition" kindref="compound">Position</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/RT.hpp" line="34" column="1" bodyfile="src/output/RT.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga886868520756636e98110cdb06349326" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Position::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/RT.hpp" line="36" column="1" bodyfile="src/output/RT.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga009f3b456aa0995413db1b8c0bd6f374" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Position::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/RT.hpp" line="37" column="1" bodyfile="src/output/RT.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gab6b7dd5c2869fb23755faee32f1e6731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Position::operator+=</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator+=</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>concatenate given int to this position </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>int must be positive </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/RT.hpp" line="41" column="1" bodyfile="src/output/RT.cpp" bodystart="41" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classPosition_1a352cef0201630bbd48cc2cd14ecbe5ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const Position &amp;pos)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="classPosition" kindref="compound">Position</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/RT.hpp" line="43" column="1" bodyfile="src/output/RT.cpp" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="friend" id="classPosition_1adc3afc964f8573df5e41f470340f2935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classPosition" kindref="compound">Position</ref></type>
        <definition>Position operator+</definition>
        <argsstring>(const Position &amp;, const size_t &amp;)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classPosition" kindref="compound">Position</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/RT.hpp" line="44" column="1" bodyfile="src/output/RT.hpp" bodystart="52" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="group__output_1ga19d238e39cbe5a9f03929473bbd5b745" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Position::print</definition>
        <argsstring>(std::ostream &amp;o) const</argsstring>
        <name>print</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/RT.hpp" line="49" column="1" bodyfile="src/output/RT.cpp" bodystart="48" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>position in a RT. </para>
    </briefdescription>
    <detaileddescription>
<para>= sequence of integers to reach position from root. </para>
    </detaileddescription>
    <location file="src/output/RT.hpp" line="29" column="1" bodyfile="src/output/RT.hpp" bodystart="28" bodyend="50"/>
    <listofallmembers>
      <member refid="classPosition_1afccdc3a3b6183af2b150c4672ccf4b2f" prot="protected" virt="non-virtual"><scope>Position</scope><name>_content</name></member>
      <member refid="group__output_1ga886868520756636e98110cdb06349326" prot="public" virt="non-virtual"><scope>Position</scope><name>empty</name></member>
      <member refid="group__output_1ga009f3b456aa0995413db1b8c0bd6f374" prot="public" virt="non-virtual"><scope>Position</scope><name>length</name></member>
      <member refid="classPosition_1adc3afc964f8573df5e41f470340f2935" prot="public" virt="non-virtual"><scope>Position</scope><name>operator+</name></member>
      <member refid="group__output_1gab6b7dd5c2869fb23755faee32f1e6731" prot="public" virt="non-virtual"><scope>Position</scope><name>operator+=</name></member>
      <member refid="classPosition_1a352cef0201630bbd48cc2cd14ecbe5ab" prot="public" virt="non-virtual"><scope>Position</scope><name>operator&lt;&lt;</name></member>
      <member refid="group__output_1ga369a577425f8ba02e8750d04b6a088db" prot="public" virt="non-virtual"><scope>Position</scope><name>Position</name></member>
      <member refid="group__output_1ga63750e368482cc5ef45180d3672b1c55" prot="public" virt="non-virtual"><scope>Position</scope><name>Position</name></member>
      <member refid="group__output_1ga19d238e39cbe5a9f03929473bbd5b745" prot="protected" virt="non-virtual"><scope>Position</scope><name>print</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
