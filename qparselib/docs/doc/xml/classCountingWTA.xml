<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classCountingWTA" kind="class" language="C++" prot="public">
    <compoundname>CountingWTA</compoundname>
    <basecompoundref refid="classWTA" prot="public" virt="non-virtual">WTA</basecompoundref>
    <includes local="no">CountingWTA.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classCountingWTA_1afb1577fedda586fb3c97df730b8d4100" prot="protected" static="no" mutable="no">
        <type><ref refid="group__schemata_1ga34fd7500c532fc3af1419927d6102bb4" kindref="member">OTransitionTable</ref></type>
        <definition>OTransitionTable CountingWTA::_tableids</definition>
        <argsstring></argsstring>
        <name>_tableids</name>
        <briefdescription>
<para>copy of transition table ordered according to the transition&apos;s ids (can be iterated). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/CountingWTA.hpp" line="79" column="1" bodyfile="src/schemata/CountingWTA.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="group__schemata_1ga170bee814ca8089ab27a574b1f47281c" prot="protected" static="yes" mutable="no">
        <type>bool(*</type>
        <definition>bool(* CountingWTA::_trcomp_ptr)(std::pair&lt; state_t, Transition &amp;&gt;, std::pair&lt; state_t, Transition &amp;&gt;)</definition>
        <argsstring>)(std::pair&lt; state_t, Transition &amp;&gt;, std::pair&lt; state_t, Transition &amp;&gt;)</argsstring>
        <name>_trcomp_ptr</name>
        <initializer>= &amp;trcomp</initializer>
        <briefdescription>
<para>pointer to comparison function√• </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/CountingWTA.hpp" line="82" column="1" bodyfile="src/schemata/CountingWTA.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__schemata_1gad46a7f821d01aed3719a585f66130e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CountingWTA::CountingWTA</definition>
        <argsstring>()</argsstring>
        <name>CountingWTA</name>
        <briefdescription>
<para>default initializer for cython </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/CountingWTA.hpp" line="54" column="1" bodyfile="src/schemata/CountingWTA.cpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga590bb9036b59d5cf81bbbedb18d19093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CountingWTA::CountingWTA</definition>
        <argsstring>(const WTA &amp;a)</argsstring>
        <name>CountingWTA</name>
        <param>
          <type>const <ref refid="classWTA" kindref="compound">WTA</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>copy base <ref refid="classWTA" kindref="compound">WTA</ref> reset weight values to counting weights (unit vectors) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/CountingWTA.hpp" line="57" column="1" bodyfile="src/schemata/CountingWTA.cpp" bodystart="27" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classCountingWTA_1a4ac4c2d11483cbd40420148e688e9e7f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CountingWTA::hasType</definition>
        <argsstring>(std::string code) const</argsstring>
        <name>hasType</name>
        <reimplements refid="classWTA_1a23060c851d5cf624215c2d9dc8ad4b45">hasType</reimplements>
        <param>
          <type>std::string</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/CountingWTA.hpp" line="59" column="1" bodyfile="src/schemata/CountingWTA.hpp" bodystart="59" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga2665883ffe41001dd7c2568bc9bef02f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classWeight" kindref="compound">Weight</ref></type>
        <definition>Weight CountingWTA::eval</definition>
        <argsstring>(const RhythmTree &amp;t) const</argsstring>
        <name>eval</name>
        <reimplements refid="group__schemata_1gaa6598176fb91c70988bea7cf824ec157">eval</reimplements>
        <param>
          <type>const <ref refid="classRhythmTree" kindref="compound">RhythmTree</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>special version of eval for <ref refid="classCountingWeight" kindref="compound">CountingWeight</ref> with feedback in case of fail </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/CountingWTA.hpp" line="64" column="1" bodyfile="src/schemata/CountingWTA.cpp" bodystart="76" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classCountingWTA_1a59c54deace0f2f8b53e43f1c59ac1106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const CountingWTA &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>o</defname>
        </param>
        <param>
          <type>const <ref refid="classCountingWTA" kindref="compound">CountingWTA</ref> &amp;</type>
          <defname>a</defname>
        </param>
        <briefdescription>
<para>it is important to enumerate in same order for printing and building unit weights! </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/CountingWTA.hpp" line="68" column="1" bodyfile="src/schemata/CountingWTA.cpp" bodystart="147" bodyend="162"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="group__schemata_1ga3a6ae649f73205b3390f82c3f996f6a3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWeight" kindref="compound">Weight</ref></type>
        <definition>Weight CountingWTA::evalCountingVerbose</definition>
        <argsstring>(const RhythmTree &amp;, state_t, Position) const</argsstring>
        <name>evalCountingVerbose</name>
        <param>
          <type>const <ref refid="classRhythmTree" kindref="compound">RhythmTree</ref> &amp;</type>
          <defname>t</defname>
        </param>
        <param>
          <type>state_t</type>
          <defname>s</defname>
        </param>
        <param>
          <type><ref refid="classPosition" kindref="compound">Position</ref></type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/CountingWTA.hpp" line="71" column="1" bodyfile="src/schemata/CountingWTA.cpp" bodystart="94" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="group__schemata_1ga5c94f5191975a32e951e7d39ac606dc0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CountingWTA::resetCounting</definition>
        <argsstring>(size_t dim)</argsstring>
        <name>resetCounting</name>
        <param>
          <type>size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>the weight of this <ref refid="classWTA" kindref="compound">WTA</ref> are replaced by &quot;CountingWeight&quot; unit vector of length dim (one unit per transition) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/CountingWTA.hpp" line="75" column="1" bodyfile="src/schemata/CountingWTA.cpp" bodystart="53" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>copy of <ref refid="classWTA" kindref="compound">WTA</ref> dedicated to corpus statistics. </para>
    </briefdescription>
    <detaileddescription>
<para>for <ref refid="classWTA" kindref="compound">WTA</ref> weight estimation and <ref refid="classWTA" kindref="compound">WTA</ref> construction from corpus.</para>
<para>construction of <ref refid="classWTA" kindref="compound">WTA</ref> with counting weights (unit vectors) from <ref refid="classWTA" kindref="compound">WTA</ref> and verbose tree evaluation with feedback.</para>
<para><simplesect kind="warning"><para>only for target SCHEMA </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="44">
        <label>WTA</label>
        <link refid="classWTA"/>
      </node>
      <node id="43">
        <label>CountingWTA</label>
        <link refid="classCountingWTA"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="48">
        <label>LetterWeight</label>
        <link refid="classLetterWeight"/>
      </node>
      <node id="46">
        <label>WTA</label>
        <link refid="classWTA"/>
        <childnode refid="47" relation="usage">
          <edgelabel>_seed</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>CountingWTA</label>
        <link refid="classCountingWTA"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>Weight</label>
        <link refid="classWeight"/>
        <childnode refid="48" relation="usage">
          <edgelabel>_letter</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/schemata/CountingWTA.hpp" line="51" column="1" bodyfile="src/schemata/CountingWTA.hpp" bodystart="50" bodyend="85"/>
    <listofallmembers>
      <member refid="classWTA_1a3ed6ca11b3e520485171a0f07deffd21" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>_cpt_size</name></member>
      <member refid="classWTA_1a76cf3c27412f9d61464a8a82aea97b89" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>_cpt_tr</name></member>
      <member refid="classWTA_1a52dd7c5ad9439670d75df10f2dd1e4df" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>_initial</name></member>
      <member refid="classWTA_1acb19a9da4f88e4b3538b6889cbd49a08" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>_max_post</name></member>
      <member refid="classWTA_1ae6d1c616caceb7819d4d23f4a635cddc" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>_max_pre</name></member>
      <member refid="classWTA_1ad93a124d289cf4d1e2801fccb01ca8ea" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>_seed</name></member>
      <member refid="classWTA_1a0d3422d597fbe64d655d9ced77dd7b8f" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>_table</name></member>
      <member refid="classCountingWTA_1afb1577fedda586fb3c97df730b8d4100" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>_tableids</name></member>
      <member refid="group__schemata_1ga170bee814ca8089ab27a574b1f47281c" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>_trcomp_ptr</name></member>
      <member refid="group__schemata_1ga91e272f4f9463149cd296f48e65a4185" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>abstract</name></member>
      <member refid="group__schemata_1ga924a1c533383a7185b9d466b59c5a495" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>add</name></member>
      <member refid="group__schemata_1ga01de1e03d09518b38ab69a2075276ae2" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>add</name></member>
      <member refid="group__schemata_1gab8ea841b4a1e71ef70d3fda927f0507d" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>allStates</name></member>
      <member refid="group__schemata_1ga23c3f9884c683e4bbab323208e08c672" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>begin</name></member>
      <member refid="group__schemata_1gaec169477bdc2cf883916c38dbc18e577" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>clean</name></member>
      <member refid="group__schemata_1ga9370cdd31619d49bfb0b18fa6b4e13b7" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>countAll</name></member>
      <member refid="group__schemata_1ga5f3a0d868bf26b504cccc53b4d55e09a" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>CountingtoPenalty</name></member>
      <member refid="group__schemata_1ga8dfef6b591f952f0fea9dae1f5e475c7" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>CountingtoStochastic</name></member>
      <member refid="group__schemata_1gad46a7f821d01aed3719a585f66130e27" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>CountingWTA</name></member>
      <member refid="group__schemata_1ga590bb9036b59d5cf81bbbedb18d19093" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>CountingWTA</name></member>
      <member refid="group__schemata_1ga0f6551b20a213eb88c6a7e822ebc5915" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>countStates</name></member>
      <member refid="group__schemata_1ga8acbd7562a6f69e7634d6b9f9e341e4a" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>countTransitions</name></member>
      <member refid="group__schemata_1gada977ff7270308f29852b59f38965bde" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>empty</name></member>
      <member refid="group__schemata_1gaea41b32c37bbe955d0359039d7731fea" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>emptyStates</name></member>
      <member refid="group__schemata_1gaf5075f5a210343d6da208f4c80421cb5" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>end</name></member>
      <member refid="group__schemata_1ga2665883ffe41001dd7c2568bc9bef02f" prot="public" virt="virtual"><scope>CountingWTA</scope><name>eval</name></member>
      <member refid="group__schemata_1gac842f196f85e3c3b079c7c0992173e46" prot="public" virt="virtual" ambiguityscope="WTA::"><scope>CountingWTA</scope><name>eval</name></member>
      <member refid="group__schemata_1ga3a6ae649f73205b3390f82c3f996f6a3" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>evalCountingVerbose</name></member>
      <member refid="classCountingWTA_1a4ac4c2d11483cbd40420148e688e9e7f" prot="public" virt="virtual"><scope>CountingWTA</scope><name>hasType</name></member>
      <member refid="group__schemata_1gaf3c11e99698a2cf7ef039632dc5e2b6b" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>hasWeightType</name></member>
      <member refid="classWTA_1ae6b10f70925f14f36b839e5d8657bc5e" prot="public" virt="virtual"><scope>CountingWTA</scope><name>initial</name></member>
      <member refid="classWTA_1a5d8ace9f515a3902d889db560f08f4c5" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>initials</name></member>
      <member refid="group__schemata_1ga9ef4193ae949ae7c9e52d30720e37202" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>isClean</name></member>
      <member refid="group__schemata_1ga88d07a1e47cc3ee537234861b7336dd6" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>isInitial</name></member>
      <member refid="group__schemata_1ga4459bd6654cbe35b39df9cade16c6d58" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>isRegistered</name></member>
      <member refid="classWTA_1a1a5cead20cba42a111ff7ab5546bc54c" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>max_post</name></member>
      <member refid="classWTA_1a646bb2048b24358325f8e07c789af82c" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>max_pre</name></member>
      <member refid="classWTA_1aa4eda8d626af33674c59fef22c8220c1" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>normalize</name></member>
      <member refid="group__schemata_1ga28c9a7e35d4d516ef0f9967e773305f8" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>oftarget</name></member>
      <member refid="classCountingWTA_1a59c54deace0f2f8b53e43f1c59ac1106" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>operator&lt;&lt;</name></member>
      <member refid="group__schemata_1gaff1196a45ffd1400bc4004e27b167218" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>PenaltytoCounting</name></member>
      <member refid="group__schemata_1gaeb713b8807bc81c6c6519ced5d531e06" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>print</name></member>
      <member refid="group__schemata_1ga3d8d24249e26ecc8bbdaf672c6e8d3cf" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>remove</name></member>
      <member refid="group__schemata_1ga5c94f5191975a32e951e7d39ac606dc0" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>resetCounting</name></member>
      <member refid="group__schemata_1ga625d9da502c5cd554797ebe9ee9023c4" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>resolution</name></member>
      <member refid="group__schemata_1gab201fee50d73843159cbef5f453838f0" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>size</name></member>
      <member refid="group__schemata_1gae6fb2dbd82ed290528b90ee7bb4b6ccc" prot="protected" virt="non-virtual"><scope>CountingWTA</scope><name>step</name></member>
      <member refid="group__schemata_1ga0bddc6750b18023be6976bd5cd46a2f5" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>StochastictoPenalty</name></member>
      <member refid="group__schemata_1gabfe48e6398d83c03161b664dadcf8fcd" prot="public" virt="virtual"><scope>CountingWTA</scope><name>weight_one</name></member>
      <member refid="group__schemata_1ga762b5bbee46468815993417ca9b3d9c6" prot="public" virt="virtual"><scope>CountingWTA</scope><name>weight_zero</name></member>
      <member refid="group__schemata_1ga5636da911ebbe8772c5444172d56800d" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>WTA</name></member>
      <member refid="group__schemata_1ga6eeb789b8c8aa8404f611a6fed61faca" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>WTA</name></member>
      <member refid="group__schemata_1gaacdee6c2292baea7f712c84a5e205432" prot="public" virt="non-virtual"><scope>CountingWTA</scope><name>~WTA</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
