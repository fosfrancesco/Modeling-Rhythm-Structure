<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classSIPpointer" kind="class" language="C++" prot="public">
    <compoundname>SIPpointer</compoundname>
    <basecompoundref refid="classSIpointer" prot="public" virt="non-virtual">SIpointer</basecompoundref>
    <derivedcompoundref refid="classSKIPpointer" prot="public" virt="non-virtual">SKIPpointer</derivedcompoundref>
    <includes local="no">PtrSIP.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classSIPpointer_1acfbd9084ef6db9de5776896247ac71c8" prot="protected" static="no" mutable="no">
        <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
        <definition>pre_t SIPpointer::_pre</definition>
        <argsstring></argsstring>
        <name>_pre</name>
        <briefdescription>
<para>pre and post contain concrete labels (number of events) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>Label.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="169" column="1" bodyfile="src/table/PtrSIP.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSIPpointer_1ab8ae3255dd4e6f898db0c5e49c860f28" prot="protected" static="no" mutable="no">
        <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
        <definition>pre_t SIPpointer::_post</definition>
        <argsstring></argsstring>
        <name>_post</name>
        <briefdescription>
<para>pre and post contain concrete labels (number of events) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>Label.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="173" column="1" bodyfile="src/table/PtrSIP.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__table_1gac498892cd08ebd0663899dc82b00fac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SIPpointer::SIPpointer</definition>
        <argsstring>(pre_t pre=PP_UNKNOWN, pre_t post=PP_UNKNOWN)</argsstring>
        <name>SIPpointer</name>
        <param>
          <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
          <declname>pre</declname>
          <defval>PP_UNKNOWN</defval>
        </param>
        <param>
          <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
          <declname>post</declname>
          <defval>PP_UNKNOWN</defval>
        </param>
        <briefdescription>
<para>dummy ptr. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="53" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="15" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gafcef62ae9e6a74448beec7ac040f6d7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SIPpointer::SIPpointer</definition>
        <argsstring>(label_t)</argsstring>
        <name>SIPpointer</name>
        <param>
          <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
          <defname>s</defname>
        </param>
        <briefdescription>
<para>fake ptr for terminal run, contains only a label symbol. it is considered as complete </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="58" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga5470d875405a71931e2349915201da20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SIPpointer::SIPpointer</definition>
        <argsstring>(Environment *env, state_t s, pre_t pre=0, pre_t post=0, Rational mdur=Rational(1), double rext=0)</argsstring>
        <name>SIPpointer</name>
        <param>
          <type><ref refid="classEnvironment" kindref="compound">Environment</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>state_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
          <declname>pre</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
          <declname>post</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classRational" kindref="compound">Rational</ref></type>
          <declname>mdur</declname>
          <defval><ref refid="classRational" kindref="compound">Rational</ref>(1)</defval>
        </param>
        <param>
          <type>double</type>
          <declname>rext</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>class specific top ptr (covering the whole input segment </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>given extension in realtime.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>env</parametername>
</parameternamelist>
<parameterdescription>
<para>must contain an input segment and interval heap </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="66" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="32" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gaeea3246bf0f27b8b4a0a930f7d1a4379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SIPpointer::SIPpointer</definition>
        <argsstring>(Environment *, const SIPpointer &amp;p, double rdur, Rational mdur, bool position, size_t i, state_t s)</argsstring>
        <name>SIPpointer</name>
        <param>
          <type><ref refid="classEnvironment" kindref="compound">Environment</ref> *</type>
          <defname>env</defname>
        </param>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rdur</declname>
        </param>
        <param>
          <type><ref refid="classRational" kindref="compound">Rational</ref></type>
          <declname>mdur</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>position</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>state_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>split ptr p in 2 parts. </para>
        </briefdescription>
        <detaileddescription>
<para>if position = 0, first part has (real-time/musical-time) durations rdur/mdur</para>
<para>if position = 1, second part has (real-time/musical-time) durations rdur/mdur</para>
<para>construct part number i (1 or 2) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>env</parametername>
</parameternamelist>
<parameterdescription>
<para>must contain an input segment and interval heap </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rdur</parametername>
</parameternamelist>
<parameterdescription>
<para>must be strictly positive. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mdur</parametername>
</parameternamelist>
<parameterdescription>
<para>must be strictly positive. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>must be 1 or 2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>(state) can be <ref refid="classWTA" kindref="compound">WTA</ref> or Meta. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="87" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="48" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gad83be64e20b13419994b3e9ae23654d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SIPpointer::SIPpointer</definition>
        <argsstring>(Environment *, const SIPpointer &amp;p, size_t a, size_t i, state_t s)</argsstring>
        <name>SIPpointer</name>
        <param>
          <type><ref refid="classEnvironment" kindref="compound">Environment</ref> *</type>
          <defname>env</defname>
        </param>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>state_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>sub-pointer or instance as leaf. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="96" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="77" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga32c45b7b04d59e932c5b43ba03b47b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SIPpointer::SIPpointer</definition>
        <argsstring>(const SIPpointer &amp;)</argsstring>
        <name>SIPpointer</name>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
<para>copy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="102" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gaa4c3c43c081bf789120e96683bc70cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SIPpointer::SIPpointer</definition>
        <argsstring>(const SIPpointer &amp;p, const SIPpointer &amp;p0, const SIPpointer &amp;p1)</argsstring>
        <name>SIPpointer</name>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
<para>instance as parent. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="106" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="139" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga12c22407821e96d6c7d0bca88392cbda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SIPpointer::SIPpointer</definition>
        <argsstring>(const SIPpointer &amp;p0, const SIPpointer &amp;p1)</argsstring>
        <name>SIPpointer</name>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
<para>instance as next sibling. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="112" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="157" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga9855eef9600bbdd1e74343844e0c158c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
        <definition>SIPpointer &amp; SIPpointer::operator=</definition>
        <argsstring>(const SIPpointer &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="115" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="170" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga519f21be86b2ddb4fae2bab869434863" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SIPpointer::operator==</definition>
        <argsstring>(const SIPpointer &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
<para>for use as key in a unordered_multimap. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="119" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="183" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga58f25245c42e16d11738e74c66a63cf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SIPpointer::operator!=</definition>
        <argsstring>(const SIPpointer &amp;) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="120" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gaefff5ba3579bd6174700ab1462fa13fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SIPpointer::operator&lt;</definition>
        <argsstring>(const SIPpointer &amp;) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
<para>for use as key in a multimap. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="124" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="198" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gad7e14d03ea63991d16a0da5292eda82d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SIPpointer::instance</definition>
        <argsstring>(const SIPpointer &amp;p) const</argsstring>
        <name>instance</name>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="127" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="247" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gae02f880deb0305e3122caf05f9d2bad0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SIPpointer::subsume</definition>
        <argsstring>(const SIPpointer &amp;p) const</argsstring>
        <name>subsume</name>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="130" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classSIPpointer_1a1166ddc463561929c52bc12f6cd47bca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SIPpointer::has_I</definition>
        <argsstring>() const</argsstring>
        <name>has_I</name>
        <reimplements refid="classSIpointer_1a4cb39a0c156f3b09eb15feb12dad2434">has_I</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="132" column="1" bodyfile="src/table/PtrSIP.hpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classSIPpointer_1a251168384b826897585f182320d4d8ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SIPpointer::has_P</definition>
        <argsstring>() const</argsstring>
        <name>has_P</name>
        <reimplements refid="classSIpointer_1a433d1c2fbb2e79b7f0ada6b424739bec">has_P</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="133" column="1" bodyfile="src/table/PtrSIP.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classSIPpointer_1a927bea0aa60bd7e1f9b300a7e9cfd572" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classIntervalTree" kindref="compound">IntervalTree</ref> *</type>
        <definition>IntervalTree* SIPpointer::interval</definition>
        <argsstring>() const</argsstring>
        <name>interval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="135" column="1" bodyfile="src/table/PtrSIP.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classSIPpointer_1a0c9365dacbf1d57e53ecf9eb3bb22240" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
        <definition>pre_t SIPpointer::pre</definition>
        <argsstring>() const</argsstring>
        <name>pre</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="136" column="1" bodyfile="src/table/PtrSIP.hpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classSIPpointer_1a0c213749e0aae712a17837e5f9f2b15a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
        <definition>pre_t SIPpointer::post</definition>
        <argsstring>() const</argsstring>
        <name>post</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="137" column="1" bodyfile="src/table/PtrSIP.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga2f95b5a2058b20744a00737b1240bc83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SIPpointer::complete</definition>
        <argsstring>() const</argsstring>
        <name>complete</name>
        <reimplements refid="group__table_1ga638627bc96caa0f1dbf7093f0f70951b">complete</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="140" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="272" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga7f7cd8ae86d71b147fc662d3cc4977c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
        <definition>label_t SIPpointer::label</definition>
        <argsstring>(const Transition &amp;t) const</argsstring>
        <name>label</name>
        <reimplements refid="group__table_1ga6bdbea8e7013194f834be17932efe642">label</reimplements>
        <param>
          <type>const <ref refid="classTransition" kindref="compound">Transition</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
<simplesect kind="warning"><para>the _pre value must be known </para>
</simplesect>
<simplesect kind="warning"><para>_node must be set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="145" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="280" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gabf87df773f8e0f628e0bae79e88097db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SIPpointer::compatible</definition>
        <argsstring>(const label_t, bool abstract=true) const</argsstring>
        <name>compatible</name>
        <reimplements refid="group__table_1gaca7d3c4d141ecf2874a5e5512e0c02ff">compatible</reimplements>
        <param>
          <type>const <ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
          <defname>label</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>abstract</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="152" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="293" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gaf830b0bf9d24b53e4674de49308b7853" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SIPpointer::dummy</definition>
        <argsstring>() const</argsstring>
        <name>dummy</name>
        <reimplements refid="group__table_1ga555753e41af94ac201a0c8c99babb83b">dummy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="155" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="338" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga01caac75d66ff2e272a248c7e1954415" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classWeight" kindref="compound">Weight</ref></type>
        <definition>Weight SIPpointer::terminalWeight</definition>
        <argsstring>(const InputSegment *s, const Transition &amp;t) const</argsstring>
        <name>terminalWeight</name>
        <reimplements refid="group__table_1ga6b46b59b3b465ba6a995f76ff34970ce">terminalWeight</reimplements>
        <param>
          <type>const <ref refid="classInputSegment" kindref="compound">InputSegment</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classTransition" kindref="compound">Transition</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>input segment must not be NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="159" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="348" bodyend="394"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classSIPpointer_1a7576e987b23cc05f8c50602b5fbe5fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const SIPpointer &amp;p)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSIP.hpp" line="162" column="1" bodyfile="src/table/PtrSIP.cpp" bodystart="397" bodyend="422"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>key in a parse table. pointer to a (best) run for 1-best parsing for <ref refid="classWTA" kindref="compound">WTA</ref> and input segment. </para>
    </briefdescription>
    <detaileddescription>
<para>a <ref refid="classSIPpointer" kindref="compound">SIPpointer</ref> contains<itemizedlist>
<listitem><para>a state symbol: either a <ref refid="classWTA" kindref="compound">WTA</ref> state or a meta state or a leaf label</para>
</listitem><listitem><para>an aligned interval in the input segment</para>
</listitem><listitem><para>pre and post values, known or not (partial ptr) </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="399">
        <label>SIpointer</label>
        <link refid="classSIpointer"/>
        <childnode refid="400" relation="public-inheritance">
        </childnode>
      </node>
      <node id="401">
        <label>Pointer</label>
        <link refid="classPointer"/>
      </node>
      <node id="402">
        <label>SKIPpointer</label>
        <link refid="classSKIPpointer"/>
        <childnode refid="398" relation="public-inheritance">
        </childnode>
      </node>
      <node id="400">
        <label>Spointer</label>
        <link refid="classSpointer"/>
        <childnode refid="401" relation="public-inheritance">
        </childnode>
      </node>
      <node id="398">
        <label>SIPpointer</label>
        <link refid="classSIPpointer"/>
        <childnode refid="399" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="404">
        <label>SIpointer</label>
        <link refid="classSIpointer"/>
        <childnode refid="405" relation="public-inheritance">
        </childnode>
        <childnode refid="407" relation="usage">
          <edgelabel>_node</edgelabel>
        </childnode>
      </node>
      <node id="406">
        <label>Pointer</label>
        <link refid="classPointer"/>
      </node>
      <node id="409">
        <label>Interval</label>
        <link refid="classInterval"/>
        <childnode refid="410" relation="usage">
          <edgelabel>mbegin</edgelabel>
          <edgelabel>mend</edgelabel>
        </childnode>
      </node>
      <node id="405">
        <label>Spointer</label>
        <link refid="classSpointer"/>
        <childnode refid="406" relation="public-inheritance">
        </childnode>
      </node>
      <node id="408">
        <label>AlignedInterval</label>
        <link refid="classAlignedInterval"/>
        <childnode refid="409" relation="public-inheritance">
        </childnode>
      </node>
      <node id="407">
        <label>IntervalTree</label>
        <link refid="classIntervalTree"/>
        <childnode refid="408" relation="public-inheritance">
        </childnode>
        <childnode refid="407" relation="usage">
          <edgelabel>_previous_sibling</edgelabel>
          <edgelabel>_parent</edgelabel>
        </childnode>
      </node>
      <node id="410">
        <label>Rational</label>
        <link refid="classRational"/>
      </node>
      <node id="403">
        <label>SIPpointer</label>
        <link refid="classSIPpointer"/>
        <childnode refid="404" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/table/PtrSIP.hpp" line="48" column="1" bodyfile="src/table/PtrSIP.hpp" bodystart="47" bodyend="178"/>
    <listofallmembers>
      <member refid="classSIpointer_1ad623e07df03b58eced4ceaf0855f5993" prot="protected" virt="non-virtual"><scope>SIPpointer</scope><name>_node</name></member>
      <member refid="classSIPpointer_1ab8ae3255dd4e6f898db0c5e49c860f28" prot="protected" virt="non-virtual"><scope>SIPpointer</scope><name>_post</name></member>
      <member refid="classSIPpointer_1acfbd9084ef6db9de5776896247ac71c8" prot="protected" virt="non-virtual"><scope>SIPpointer</scope><name>_pre</name></member>
      <member refid="classSpointer_1a27f37ac70c70f90d9a4a576606bb52e1" prot="protected" virt="non-virtual"><scope>SIPpointer</scope><name>_state</name></member>
      <member refid="group__table_1gabf87df773f8e0f628e0bae79e88097db" prot="public" virt="virtual"><scope>SIPpointer</scope><name>compatible</name></member>
      <member refid="group__table_1ga2f95b5a2058b20744a00737b1240bc83" prot="public" virt="virtual"><scope>SIPpointer</scope><name>complete</name></member>
      <member refid="group__table_1gac83e0619c17ce4efd589f73513706a6b" prot="public" virt="virtual"><scope>SIPpointer</scope><name>divisible</name></member>
      <member refid="group__table_1gaf830b0bf9d24b53e4674de49308b7853" prot="public" virt="virtual"><scope>SIPpointer</scope><name>dummy</name></member>
      <member refid="group__table_1gacc34f81b5d73c93840bce279ddde4620" prot="protected" virt="non-virtual"><scope>SIPpointer</scope><name>equal_node</name></member>
      <member refid="classSIPpointer_1a1166ddc463561929c52bc12f6cd47bca" prot="public" virt="virtual"><scope>SIPpointer</scope><name>has_I</name></member>
      <member refid="classPointer_1a66999c2d23c4b592228f1e74a96e0315" prot="public" virt="virtual"><scope>SIPpointer</scope><name>has_K</name></member>
      <member refid="classSIPpointer_1a251168384b826897585f182320d4d8ac" prot="public" virt="virtual"><scope>SIPpointer</scope><name>has_P</name></member>
      <member refid="classSpointer_1aec852b63ae9427911ff290979bc0a4b4" prot="public" virt="virtual"><scope>SIPpointer</scope><name>has_S</name></member>
      <member refid="classPointer_1a02c73f5f2b21a1fe37b744383508cb64" prot="public" virt="virtual"><scope>SIPpointer</scope><name>incr</name></member>
      <member refid="group__table_1gad709430d698804267807f12deba9952b" prot="public" virt="virtual"><scope>SIPpointer</scope><name>innerWeight</name></member>
      <member refid="group__table_1gad7e14d03ea63991d16a0da5292eda82d" prot="public" virt="virtual"><scope>SIPpointer</scope><name>instance</name></member>
      <member refid="group__table_1ga259b23462f7e87f6df0e9361c1884618" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SIPpointer</scope><name>instance</name></member>
      <member refid="group__table_1ga718cc6f7473c3fb1b074211bf2f16d8b" prot="public" virt="virtual" ambiguityscope="Spointer::"><scope>SIPpointer</scope><name>instance</name></member>
      <member refid="classSIPpointer_1a927bea0aa60bd7e1f9b300a7e9cfd572" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>interval</name></member>
      <member refid="group__table_1ga7f7cd8ae86d71b147fc662d3cc4977c0" prot="public" virt="virtual"><scope>SIPpointer</scope><name>label</name></member>
      <member refid="group__table_1ga58f25245c42e16d11738e74c66a63cf6" prot="public" virt="virtual"><scope>SIPpointer</scope><name>operator!=</name></member>
      <member refid="group__table_1ga303c4da57a70fa07b7a2de3692fc9091" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SIPpointer</scope><name>operator!=</name></member>
      <member refid="group__table_1gaefff5ba3579bd6174700ab1462fa13fb" prot="public" virt="virtual"><scope>SIPpointer</scope><name>operator&lt;</name></member>
      <member refid="group__table_1ga51c64ecf271622a259840f55236778ef" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SIPpointer</scope><name>operator&lt;</name></member>
      <member refid="group__table_1ga797b376c9ed1b4777ea94ff8350c65c8" prot="public" virt="virtual" ambiguityscope="Spointer::"><scope>SIPpointer</scope><name>operator&lt;</name></member>
      <member refid="classSIPpointer_1a7576e987b23cc05f8c50602b5fbe5fe3" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>operator&lt;&lt;</name></member>
      <member refid="group__table_1ga9855eef9600bbdd1e74343844e0c158c" prot="public" virt="virtual"><scope>SIPpointer</scope><name>operator=</name></member>
      <member refid="group__table_1ga071bb69977a62e26f9ec11230ae2646b" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SIPpointer</scope><name>operator=</name></member>
      <member refid="group__table_1ga88eb3c521aa1c9bc9b8891f20b9a01eb" prot="public" virt="virtual" ambiguityscope="Spointer::"><scope>SIPpointer</scope><name>operator=</name></member>
      <member refid="group__table_1ga519f21be86b2ddb4fae2bab869434863" prot="public" virt="virtual"><scope>SIPpointer</scope><name>operator==</name></member>
      <member refid="group__table_1ga3330f8e59b08797b4c73ae558f6d588e" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SIPpointer</scope><name>operator==</name></member>
      <member refid="group__table_1gacb9d4d8e3da8a1e082b80fd31abb9772" prot="public" virt="virtual" ambiguityscope="Spointer::"><scope>SIPpointer</scope><name>operator==</name></member>
      <member refid="classPointer_1aa682c210e4ae3ef7268db1ee5bcf9f9d" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>partial</name></member>
      <member refid="classSIPpointer_1a0c213749e0aae712a17837e5f9f2b15a" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>post</name></member>
      <member refid="classSIPpointer_1a0c9365dacbf1d57e53ecf9eb3bb22240" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>pre</name></member>
      <member refid="classPointer_1a8ded051c871b7fccfb6b2a20b8920cab" prot="public" virt="virtual"><scope>SIPpointer</scope><name>rank</name></member>
      <member refid="group__table_1ga7e962d8567566398e5f620ef964267cd" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1ga464163b749ecd94516ab6e94f7baa5bf" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1gac560506e7bf1439877178cf6d2459e7f" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1ga3abe73f8e3188ca49f11e09d794f1f05" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1gab5c8a8654ef626d4c7b75ef67ed28aa9" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1ga3df3168789d247e497f127caa7840e88" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1ga175406f6e30433d90a004aa27c401f29" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1ga19a6965aca9363f90f45c5d0e07bc99e" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1gac498892cd08ebd0663899dc82b00fac6" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1gafcef62ae9e6a74448beec7ac040f6d7c" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1ga5470d875405a71931e2349915201da20" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1gaeea3246bf0f27b8b4a0a930f7d1a4379" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1gad83be64e20b13419994b3e9ae23654d1" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1ga32c45b7b04d59e932c5b43ba03b47b4e" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1gaa4c3c43c081bf789120e96683bc70cb3" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1ga12c22407821e96d6c7d0bca88392cbda" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1ga467ee6f93cd0429edb40fc4de100c3c4" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1gaad8a647a58df31aefd8f2703b9f86dc5" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1ga49f82b7aafd3ae237243c85272597fa7" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1ga72441f0d67497c90602a123c45dc53d1" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1gaf40e1a1f0edc608d4413f096a19aae78" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1gac303715911a48c482acb6ae4188508d3" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1gad078973f8318ccf5800db79e87584dcc" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>Spointer</name></member>
      <member refid="classSpointer_1a8fa50c04246ceb3a48e961946a2427f7" prot="public" virt="non-virtual"><scope>SIPpointer</scope><name>state</name></member>
      <member refid="group__table_1gae02f880deb0305e3122caf05f9d2bad0" prot="public" virt="virtual"><scope>SIPpointer</scope><name>subsume</name></member>
      <member refid="group__table_1gaa50fe6e651b28c77839ddfaf1bbdcd4f" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SIPpointer</scope><name>subsume</name></member>
      <member refid="group__table_1ga06fa67855bfb50d81e18bdfacce965ce" prot="public" virt="virtual" ambiguityscope="Spointer::"><scope>SIPpointer</scope><name>subsume</name></member>
      <member refid="group__table_1ga01caac75d66ff2e272a248c7e1954415" prot="public" virt="virtual"><scope>SIPpointer</scope><name>terminalWeight</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
