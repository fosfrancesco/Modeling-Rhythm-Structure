<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structSpiralPoint" kind="struct" language="C++" prot="public">
    <compoundname>SpiralPoint</compoundname>
    <derivedcompoundref refid="structNoteName" prot="public" virt="non-virtual">NoteName</derivedcompoundref>
    <includes local="no">Spiral.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structSpiralPoint_1a68150be95db2b13f25312129c7ef96a5" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double SpiralPoint::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="28" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSpiralPoint_1aa969dcfbbeb0ce7b09d110ee93509da0" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double SpiralPoint::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="29" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSpiralPoint_1a97da96a3080f8aaaab29f35da17af415" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double SpiralPoint::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="30" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__segment_1ga80277d41d835c643826b4e813490849a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SpiralPoint::SpiralPoint</definition>
        <argsstring>(double, double, double)</argsstring>
        <name>SpiralPoint</name>
        <param>
          <type>double</type>
          <defname>vx</defname>
        </param>
        <param>
          <type>double</type>
          <defname>vy</defname>
        </param>
        <param>
          <type>double</type>
          <defname>vz</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="32" column="1" bodyfile="src/segment/Spiral.cpp" bodystart="16" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1gae521f98807e13c4e0019b561565cda18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SpiralPoint::SpiralPoint</definition>
        <argsstring>(const SpiralPoint &amp;rhs)</argsstring>
        <name>SpiralPoint</name>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="34" column="1" bodyfile="src/segment/Spiral.cpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1gab4085951f6e5264f912feadf327a8c81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
        <definition>SpiralPoint &amp; SpiralPoint::operator=</definition>
        <argsstring>(const SpiralPoint &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <defname>rhs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="36" column="1" bodyfile="src/segment/Spiral.cpp" bodystart="30" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1ga8d702bcd74b30d19929d1954087bd4b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SpiralPoint::isnormal</definition>
        <argsstring>() const</argsstring>
        <name>isnormal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>wether coordinate are not NAN. */ </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="39" column="1" bodyfile="src/segment/Spiral.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1ga50ce60a751c8ad173a53ccee629a4598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpiralPoint::operator+=</definition>
        <argsstring>(const SpiralPoint &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="41" column="1" bodyfile="src/segment/Spiral.cpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1ga81b9a0d474b385cf0335523d49cc9fc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpiralPoint::operator-=</definition>
        <argsstring>(const SpiralPoint &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="42" column="1" bodyfile="src/segment/Spiral.cpp" bodystart="56" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1gaf7d46ab9c2b5dd8e11ec4a940dea3d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpiralPoint::operator*=</definition>
        <argsstring>(double a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="44" column="1" bodyfile="src/segment/Spiral.cpp" bodystart="65" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1ga71dccd6f3dd14b2c497e4198ea37d745" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SpiralPoint::distance</definition>
        <argsstring>(const SpiralPoint &amp;rhs) const</argsstring>
        <name>distance</name>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Euclidian distance to given point. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="50" column="1" bodyfile="src/segment/Spiral.cpp" bodystart="75" bodyend="87"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structSpiralPoint_1ac21d75290af6313310910fa1a2e13552" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const SpiralPoint &amp;, const SpiralPoint &amp;)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <defname>lhs</defname>
        </param>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <defname>rhs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="46" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="friend" id="structSpiralPoint_1af048917befb7b81ed301da6d53f00271" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const SpiralPoint &amp;, const SpiralPoint &amp;)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <defname>lhs</defname>
        </param>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <defname>rhs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="47" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="friend" id="structSpiralPoint_1ab3a698d42f743ce361da6916209eca88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const SpiralPoint &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="structSpiralPoint" kindref="compound">SpiralPoint</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Spiral.hpp" line="52" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="70" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Elaine Chew&apos;s spiral of fifths. </para>
    </briefdescription>
    <detaileddescription>
<para>for pitch spelling. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="441">
        <label>SpiralPoint</label>
        <link refid="structSpiralPoint"/>
      </node>
      <node id="442">
        <label>NoteName</label>
        <link refid="structNoteName"/>
        <childnode refid="441" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/segment/Spiral.hpp" line="26" column="1" bodyfile="src/segment/Spiral.hpp" bodystart="25" bodyend="53"/>
    <listofallmembers>
      <member refid="group__segment_1ga71dccd6f3dd14b2c497e4198ea37d745" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>distance</name></member>
      <member refid="group__segment_1ga8d702bcd74b30d19929d1954087bd4b0" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>isnormal</name></member>
      <member refid="structSpiralPoint_1af048917befb7b81ed301da6d53f00271" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>operator!=</name></member>
      <member refid="group__segment_1gaf7d46ab9c2b5dd8e11ec4a940dea3d03" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>operator*=</name></member>
      <member refid="group__segment_1ga50ce60a751c8ad173a53ccee629a4598" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>operator+=</name></member>
      <member refid="group__segment_1ga81b9a0d474b385cf0335523d49cc9fc1" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>operator-=</name></member>
      <member refid="structSpiralPoint_1ab3a698d42f743ce361da6916209eca88" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>operator&lt;&lt;</name></member>
      <member refid="group__segment_1gab4085951f6e5264f912feadf327a8c81" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>operator=</name></member>
      <member refid="structSpiralPoint_1ac21d75290af6313310910fa1a2e13552" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>operator==</name></member>
      <member refid="group__segment_1ga80277d41d835c643826b4e813490849a" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>SpiralPoint</name></member>
      <member refid="group__segment_1gae521f98807e13c4e0019b561565cda18" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>SpiralPoint</name></member>
      <member refid="structSpiralPoint_1a68150be95db2b13f25312129c7ef96a5" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>x</name></member>
      <member refid="structSpiralPoint_1aa969dcfbbeb0ce7b09d110ee93509da0" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>y</name></member>
      <member refid="structSpiralPoint_1a97da96a3080f8aaaab29f35da17af415" prot="public" virt="non-virtual"><scope>SpiralPoint</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
