<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="WTA_8hpp" kind="file" language="C++">
    <compoundname>WTA.hpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">list</includes>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">math.h</includes>
    <includes refid="init_8hpp" local="yes">init.hpp</includes>
    <includes refid="trace_8hpp" local="yes">trace.hpp</includes>
    <includes refid="Label_8hpp" local="yes">Label.hpp</includes>
    <includes refid="State_8hpp" local="yes">State.hpp</includes>
    <includes refid="Transition_8hpp" local="yes">Transition.hpp</includes>
    <includes refid="SerialLabel_8hpp" local="yes">SerialLabel.hpp</includes>
    <includes refid="Weight_8hpp" local="yes">Weight.hpp</includes>
    <includes refid="RT_8hpp" local="yes">RT.hpp</includes>
    <includedby refid="WTAFile_8hpp" local="yes">src/input/WTAFile.hpp</includedby>
    <includedby refid="Parser_8hpp" local="yes">src/parsers/Parser.hpp</includedby>
    <includedby refid="Parser1bar1bestSIP_8hpp" local="yes">src/parsers/Parser1bar1bestSIP.hpp</includedby>
    <includedby refid="Parser1barKbestSKIP_8hpp" local="yes">src/parsers/Parser1barKbestSKIP.hpp</includedby>
    <includedby refid="ParserInputlessKbest_8hpp" local="yes">src/parsers/ParserInputlessKbest.hpp</includedby>
    <includedby refid="ParserMultibar1bestSIPBU_8hpp" local="yes">src/parsers/ParserMultibar1bestSIPBU.hpp</includedby>
    <includedby refid="ParserMultibar1bestSIPflat_8hpp" local="yes">src/parsers/ParserMultibar1bestSIPflat.hpp</includedby>
    <includedby refid="ComboWTA_8hpp" local="yes">src/schemata/ComboWTA.hpp</includedby>
    <includedby refid="CountingWTA_8hpp" local="yes">src/schemata/CountingWTA.hpp</includedby>
    <includedby refid="PreWTA_8hpp" local="yes">src/schemata/PreWTA.hpp</includedby>
    <includedby refid="ValueWTA_8hpp" local="yes">src/schemata/ValueWTA.hpp</includedby>
    <includedby refid="WTA_8cpp" local="yes">src/schemata/WTA.cpp</includedby>
    <includedby refid="WTA__BACKUP__31784_8cpp" local="yes">src/schemata/WTA_BACKUP_31784.cpp</includedby>
    <includedby refid="WTA__BASE__31784_8cpp" local="yes">src/schemata/WTA_BASE_31784.cpp</includedby>
    <includedby refid="WTA__LOCAL__31784_8cpp" local="yes">src/schemata/WTA_LOCAL_31784.cpp</includedby>
    <includedby refid="WTA__REMOTE__31784_8cpp" local="yes">src/schemata/WTA_REMOTE_31784.cpp</includedby>
    <includedby refid="Environment_8hpp" local="yes">src/segment/Environment.hpp</includedby>
    <includedby refid="equiv_8cpp" local="yes">src/targets/equiv/equiv.cpp</includedby>
    <includedby refid="meiutil-newparser_8cpp" local="yes">src/targets/mei/meiutil-newparser.cpp</includedby>
    <includedby refid="meiutil-v0_8cpp" local="yes">src/targets/mei/meiutil-v0.cpp</includedby>
    <includedby refid="meiutil_8cpp" local="yes">src/targets/mei/meiutil.cpp</includedby>
    <includedby refid="quant201712_8cpp" local="yes">src/targets/quant/quant201712.cpp</includedby>
    <includedby refid="squant-input_8cpp" local="yes">src/targets/quant/squant-input.cpp</includedby>
    <includedby refid="squant_8cpp" local="yes">src/targets/quant/squant.cpp</includedby>
    <includedby refid="schemas_8cpp" local="yes">src/targets/schema/schemas.cpp</includedby>
    <incdepgraph>
      <node id="293">
        <label>list</label>
      </node>
      <node id="289">
        <label>src/schemata/WTA.hpp</label>
        <link refid="WTA_8hpp"/>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
      </node>
      <node id="291">
        <label>assert.h</label>
      </node>
      <node id="296">
        <label>string</label>
      </node>
      <node id="294">
        <label>map</label>
      </node>
      <node id="299">
        <label>fstream</label>
      </node>
      <node id="292">
        <label>vector</label>
      </node>
      <node id="298">
        <label>sstream</label>
      </node>
      <node id="300">
        <label>math.h</label>
      </node>
      <node id="297">
        <label>iostream</label>
      </node>
      <node id="295">
        <label>set</label>
      </node>
      <node id="290">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classTransitionList" prot="public">TransitionList</innerclass>
    <innerclass refid="classWTA" prot="public">WTA</innerclass>
    <innerclass refid="classDepthMarking" prot="public">DepthMarking</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__schemata_1gaf9f065672b84540dc2310cee57062b5d" prot="public" static="no">
        <type>std::list&lt; <ref refid="classTransition" kindref="compound">Transition</ref> &gt;::iterator</type>
        <definition>typedef std::list&lt;Transition&gt;::iterator TransitionList_iterator</definition>
        <argsstring></argsstring>
        <name>TransitionList_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/WTA.hpp" line="45" column="1" bodyfile="src/schemata/WTA.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__schemata_1gac6a3bf271d488fbc785617cb246215f3" prot="public" static="no">
        <type>std::list&lt; <ref refid="classTransition" kindref="compound">Transition</ref> &gt;::const_iterator</type>
        <definition>typedef std::list&lt;Transition&gt;::const_iterator TransitionList_const_iterator</definition>
        <argsstring></argsstring>
        <name>TransitionList_const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/schemata/WTA.hpp" line="46" column="1" bodyfile="src/schemata/WTA.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/schemata/WTA.hpp"/>
  </compounddef>
</doxygen>
