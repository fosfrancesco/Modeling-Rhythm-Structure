<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classSKIPpointer" kind="class" language="C++" prot="public">
    <compoundname>SKIPpointer</compoundname>
    <basecompoundref refid="classSIPpointer" prot="public" virt="non-virtual">SIPpointer</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classSKIPpointer_1a54ba5b0ffdc369da69f394b791a8b7f2" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t SKIPpointer::_rank</definition>
        <argsstring></argsstring>
        <name>_rank</name>
        <briefdescription>
<para>k as in k-best. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="103" column="1" bodyfile="src/table/PtrSKIP.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__table_1ga24e762a60a81030599decff93dc1a1ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SKIPpointer::SKIPpointer</definition>
        <argsstring>()</argsstring>
        <name>SKIPpointer</name>
        <briefdescription>
<para>dummy ptr. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="34" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga1fc4cd4038153502277d11c5607a14fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SKIPpointer::SKIPpointer</definition>
        <argsstring>(label_t, size_t k=1)</argsstring>
        <name>SKIPpointer</name>
        <param>
          <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
          <defname>s</defname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>specific fake ptr for terminal run, contains only a label symbol. it is considered as complete </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="40" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gab217454122f2ec0af5c16bb1ae996925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SKIPpointer::SKIPpointer</definition>
        <argsstring>(Environment *env, pre_t pre=0, pre_t post=0, bool bar=false, size_t k=1)</argsstring>
        <name>SKIPpointer</name>
        <param>
          <type><ref refid="classEnvironment" kindref="compound">Environment</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
          <declname>pre</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
          <declname>post</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>bar</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000034"><xreftitle>Todo</xreftitle><xrefdescription><para>TBR deprecated </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="43" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="27" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga8a29b4e0af8d4fc8d298b7027e4cf638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SKIPpointer::SKIPpointer</definition>
        <argsstring>(Environment *env, state_t s, pre_t pre=0, pre_t post=0, Rational mdur=Rational(1), size_t k=1)</argsstring>
        <name>SKIPpointer</name>
        <param>
          <type><ref refid="classEnvironment" kindref="compound">Environment</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>state_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
          <declname>pre</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="group__general_1ga092fe8b972dfa977c2a0886720a7731e" kindref="member">pre_t</ref></type>
          <declname>post</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classRational" kindref="compound">Rational</ref></type>
          <declname>mdur</declname>
          <defval><ref refid="classRational" kindref="compound">Rational</ref>(1)</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>class specific top ptr (covering the whole input segment. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>env must contain an input segment and interval heap. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="52" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="40" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga6cd275122aebf4288f5d60c36a141116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SKIPpointer::SKIPpointer</definition>
        <argsstring>(Environment *env, const SKIPpointer &amp;p, size_t a, size_t i, state_t s)</argsstring>
        <name>SKIPpointer</name>
        <param>
          <type><ref refid="classEnvironment" kindref="compound">Environment</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>state_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>sub-pointer or instance as leaf. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
<simplesect kind="warning"><para>no default duration for ambiguity reasons </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="62" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="54" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga3366b26b81c9cb040716918f7d375879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SKIPpointer::SKIPpointer</definition>
        <argsstring>(const SKIPpointer &amp;)</argsstring>
        <name>SKIPpointer</name>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
<para>copy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="68" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga5dd0fd6fd23ca132973ec5f76a7f568d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SKIPpointer::SKIPpointer</definition>
        <argsstring>(const SKIPpointer &amp;p0, const SKIPpointer &amp;p1)</argsstring>
        <name>SKIPpointer</name>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
<para>next sibling. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
<simplesect kind="warning"><para>should not be called since p1 must be partial </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="74" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga8b87b18aa76b4021da6d3421c738b002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SKIPpointer::SKIPpointer</definition>
        <argsstring>(const SKIPpointer &amp;p, const SKIPpointer &amp;p0, const SKIPpointer &amp;p1)</argsstring>
        <name>SKIPpointer</name>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
<para>instance as parent. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
<simplesect kind="warning"><para>should not be called since p must be partial </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="79" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga54d7c5b3e7aa20e48ff8d15e9e0895f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
        <definition>SKIPpointer &amp; SKIPpointer::operator=</definition>
        <argsstring>(const SKIPpointer &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="82" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="86" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1ga4ecc91594489358cf7abdbf8cfd245a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SKIPpointer::operator==</definition>
        <argsstring>(const SKIPpointer &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="85" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="100" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gaa9ccc9cf48974dca2a09ca4aa6092d43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SKIPpointer::instance</definition>
        <argsstring>(const SKIPpointer &amp;p) const</argsstring>
        <name>instance</name>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="88" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="112" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gaacf829ba5696414bdcc753e97e76a7f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SKIPpointer::subsume</definition>
        <argsstring>(const SKIPpointer &amp;p) const</argsstring>
        <name>subsume</name>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>description in Ptr.hpp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="91" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classSKIPpointer_1aec99858a74fb6a7b15975d3e65f79c31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SKIPpointer::has_K</definition>
        <argsstring>() const</argsstring>
        <name>has_K</name>
        <reimplements refid="classPointer_1a66999c2d23c4b592228f1e74a96e0315">has_K</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="93" column="1" bodyfile="src/table/PtrSKIP.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classSKIPpointer_1a9c89c0ff929c37399870880fb448de98" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t SKIPpointer::rank</definition>
        <argsstring>() const</argsstring>
        <name>rank</name>
        <reimplements refid="classPointer_1a8ded051c871b7fccfb6b2a20b8920cab">rank</reimplements>
        <briefdescription>
<para>return the rank of best (k) pointed. default is 1. redefine for classes for k-best parsing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="95" column="1" bodyfile="src/table/PtrSKIP.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="group__table_1gac0c72ab0a91e652b38eb815206b0baa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SKIPpointer::incr</definition>
        <argsstring>()</argsstring>
        <name>incr</name>
        <reimplements refid="classPointer_1a02c73f5f2b21a1fe37b744383508cb64">incr</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="97" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classSKIPpointer_1a015154c0d3f197a32544c20ea2f70c10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const SKIPpointer &amp;p)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="classSKIPpointer" kindref="compound">SKIPpointer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/PtrSKIP.hpp" line="99" column="1" bodyfile="src/table/PtrSKIP.cpp" bodystart="146" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="415">
        <label>SIpointer</label>
        <link refid="classSIpointer"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="417">
        <label>Pointer</label>
        <link refid="classPointer"/>
      </node>
      <node id="413">
        <label>SKIPpointer</label>
        <link refid="classSKIPpointer"/>
        <childnode refid="414" relation="public-inheritance">
        </childnode>
      </node>
      <node id="416">
        <label>Spointer</label>
        <link refid="classSpointer"/>
        <childnode refid="417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="414">
        <label>SIPpointer</label>
        <link refid="classSIPpointer"/>
        <childnode refid="415" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="420">
        <label>SIpointer</label>
        <link refid="classSIpointer"/>
        <childnode refid="421" relation="public-inheritance">
        </childnode>
        <childnode refid="423" relation="usage">
          <edgelabel>_node</edgelabel>
        </childnode>
      </node>
      <node id="422">
        <label>Pointer</label>
        <link refid="classPointer"/>
      </node>
      <node id="418">
        <label>SKIPpointer</label>
        <link refid="classSKIPpointer"/>
        <childnode refid="419" relation="public-inheritance">
        </childnode>
      </node>
      <node id="425">
        <label>Interval</label>
        <link refid="classInterval"/>
        <childnode refid="426" relation="usage">
          <edgelabel>mbegin</edgelabel>
          <edgelabel>mend</edgelabel>
        </childnode>
      </node>
      <node id="421">
        <label>Spointer</label>
        <link refid="classSpointer"/>
        <childnode refid="422" relation="public-inheritance">
        </childnode>
      </node>
      <node id="424">
        <label>AlignedInterval</label>
        <link refid="classAlignedInterval"/>
        <childnode refid="425" relation="public-inheritance">
        </childnode>
      </node>
      <node id="423">
        <label>IntervalTree</label>
        <link refid="classIntervalTree"/>
        <childnode refid="424" relation="public-inheritance">
        </childnode>
        <childnode refid="423" relation="usage">
          <edgelabel>_previous_sibling</edgelabel>
          <edgelabel>_parent</edgelabel>
        </childnode>
      </node>
      <node id="426">
        <label>Rational</label>
        <link refid="classRational"/>
      </node>
      <node id="419">
        <label>SIPpointer</label>
        <link refid="classSIPpointer"/>
        <childnode refid="420" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/table/PtrSKIP.hpp" line="30" column="1" bodyfile="src/table/PtrSKIP.hpp" bodystart="29" bodyend="104"/>
    <listofallmembers>
      <member refid="classSIpointer_1ad623e07df03b58eced4ceaf0855f5993" prot="protected" virt="non-virtual"><scope>SKIPpointer</scope><name>_node</name></member>
      <member refid="classSIPpointer_1ab8ae3255dd4e6f898db0c5e49c860f28" prot="protected" virt="non-virtual"><scope>SKIPpointer</scope><name>_post</name></member>
      <member refid="classSIPpointer_1acfbd9084ef6db9de5776896247ac71c8" prot="protected" virt="non-virtual"><scope>SKIPpointer</scope><name>_pre</name></member>
      <member refid="classSKIPpointer_1a54ba5b0ffdc369da69f394b791a8b7f2" prot="protected" virt="non-virtual"><scope>SKIPpointer</scope><name>_rank</name></member>
      <member refid="classSpointer_1a27f37ac70c70f90d9a4a576606bb52e1" prot="protected" virt="non-virtual"><scope>SKIPpointer</scope><name>_state</name></member>
      <member refid="group__table_1gabf87df773f8e0f628e0bae79e88097db" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>compatible</name></member>
      <member refid="group__table_1ga2f95b5a2058b20744a00737b1240bc83" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>complete</name></member>
      <member refid="group__table_1gac83e0619c17ce4efd589f73513706a6b" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>divisible</name></member>
      <member refid="group__table_1gaf830b0bf9d24b53e4674de49308b7853" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>dummy</name></member>
      <member refid="group__table_1gacc34f81b5d73c93840bce279ddde4620" prot="protected" virt="non-virtual"><scope>SKIPpointer</scope><name>equal_node</name></member>
      <member refid="classSIPpointer_1a1166ddc463561929c52bc12f6cd47bca" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>has_I</name></member>
      <member refid="classSKIPpointer_1aec99858a74fb6a7b15975d3e65f79c31" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>has_K</name></member>
      <member refid="classSIPpointer_1a251168384b826897585f182320d4d8ac" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>has_P</name></member>
      <member refid="classSpointer_1aec852b63ae9427911ff290979bc0a4b4" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>has_S</name></member>
      <member refid="group__table_1gac0c72ab0a91e652b38eb815206b0baa4" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>incr</name></member>
      <member refid="group__table_1gad709430d698804267807f12deba9952b" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>innerWeight</name></member>
      <member refid="group__table_1gaa9ccc9cf48974dca2a09ca4aa6092d43" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>instance</name></member>
      <member refid="group__table_1gad7e14d03ea63991d16a0da5292eda82d" prot="public" virt="virtual" ambiguityscope="SIPpointer::"><scope>SKIPpointer</scope><name>instance</name></member>
      <member refid="group__table_1ga259b23462f7e87f6df0e9361c1884618" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SKIPpointer</scope><name>instance</name></member>
      <member refid="group__table_1ga718cc6f7473c3fb1b074211bf2f16d8b" prot="public" virt="virtual" ambiguityscope="Spointer::"><scope>SKIPpointer</scope><name>instance</name></member>
      <member refid="classSIPpointer_1a927bea0aa60bd7e1f9b300a7e9cfd572" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>interval</name></member>
      <member refid="group__table_1ga7f7cd8ae86d71b147fc662d3cc4977c0" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>label</name></member>
      <member refid="group__table_1ga58f25245c42e16d11738e74c66a63cf6" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>operator!=</name></member>
      <member refid="group__table_1ga303c4da57a70fa07b7a2de3692fc9091" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SKIPpointer</scope><name>operator!=</name></member>
      <member refid="group__table_1gaefff5ba3579bd6174700ab1462fa13fb" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>operator&lt;</name></member>
      <member refid="group__table_1ga51c64ecf271622a259840f55236778ef" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SKIPpointer</scope><name>operator&lt;</name></member>
      <member refid="group__table_1ga797b376c9ed1b4777ea94ff8350c65c8" prot="public" virt="virtual" ambiguityscope="Spointer::"><scope>SKIPpointer</scope><name>operator&lt;</name></member>
      <member refid="classSKIPpointer_1a015154c0d3f197a32544c20ea2f70c10" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>operator&lt;&lt;</name></member>
      <member refid="group__table_1ga54d7c5b3e7aa20e48ff8d15e9e0895f4" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>operator=</name></member>
      <member refid="group__table_1ga9855eef9600bbdd1e74343844e0c158c" prot="public" virt="virtual" ambiguityscope="SIPpointer::"><scope>SKIPpointer</scope><name>operator=</name></member>
      <member refid="group__table_1ga071bb69977a62e26f9ec11230ae2646b" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SKIPpointer</scope><name>operator=</name></member>
      <member refid="group__table_1ga88eb3c521aa1c9bc9b8891f20b9a01eb" prot="public" virt="virtual" ambiguityscope="Spointer::"><scope>SKIPpointer</scope><name>operator=</name></member>
      <member refid="group__table_1ga4ecc91594489358cf7abdbf8cfd245a4" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>operator==</name></member>
      <member refid="group__table_1ga519f21be86b2ddb4fae2bab869434863" prot="public" virt="virtual" ambiguityscope="SIPpointer::"><scope>SKIPpointer</scope><name>operator==</name></member>
      <member refid="group__table_1ga3330f8e59b08797b4c73ae558f6d588e" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SKIPpointer</scope><name>operator==</name></member>
      <member refid="group__table_1gacb9d4d8e3da8a1e082b80fd31abb9772" prot="public" virt="virtual" ambiguityscope="Spointer::"><scope>SKIPpointer</scope><name>operator==</name></member>
      <member refid="classPointer_1aa682c210e4ae3ef7268db1ee5bcf9f9d" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>partial</name></member>
      <member refid="classSIPpointer_1a0c213749e0aae712a17837e5f9f2b15a" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>post</name></member>
      <member refid="classSIPpointer_1a0c9365dacbf1d57e53ecf9eb3bb22240" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>pre</name></member>
      <member refid="classSKIPpointer_1a9c89c0ff929c37399870880fb448de98" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>rank</name></member>
      <member refid="group__table_1ga7e962d8567566398e5f620ef964267cd" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1ga464163b749ecd94516ab6e94f7baa5bf" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1gac560506e7bf1439877178cf6d2459e7f" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1ga3abe73f8e3188ca49f11e09d794f1f05" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1gab5c8a8654ef626d4c7b75ef67ed28aa9" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1ga3df3168789d247e497f127caa7840e88" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1ga175406f6e30433d90a004aa27c401f29" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1ga19a6965aca9363f90f45c5d0e07bc99e" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIpointer</name></member>
      <member refid="group__table_1gac498892cd08ebd0663899dc82b00fac6" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1gafcef62ae9e6a74448beec7ac040f6d7c" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1ga5470d875405a71931e2349915201da20" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1gaeea3246bf0f27b8b4a0a930f7d1a4379" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1gad83be64e20b13419994b3e9ae23654d1" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1ga32c45b7b04d59e932c5b43ba03b47b4e" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1gaa4c3c43c081bf789120e96683bc70cb3" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1ga12c22407821e96d6c7d0bca88392cbda" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SIPpointer</name></member>
      <member refid="group__table_1ga24e762a60a81030599decff93dc1a1ef" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SKIPpointer</name></member>
      <member refid="group__table_1ga1fc4cd4038153502277d11c5607a14fa" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SKIPpointer</name></member>
      <member refid="group__table_1gab217454122f2ec0af5c16bb1ae996925" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SKIPpointer</name></member>
      <member refid="group__table_1ga8a29b4e0af8d4fc8d298b7027e4cf638" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SKIPpointer</name></member>
      <member refid="group__table_1ga6cd275122aebf4288f5d60c36a141116" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SKIPpointer</name></member>
      <member refid="group__table_1ga3366b26b81c9cb040716918f7d375879" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SKIPpointer</name></member>
      <member refid="group__table_1ga5dd0fd6fd23ca132973ec5f76a7f568d" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SKIPpointer</name></member>
      <member refid="group__table_1ga8b87b18aa76b4021da6d3421c738b002" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>SKIPpointer</name></member>
      <member refid="group__table_1ga467ee6f93cd0429edb40fc4de100c3c4" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1gaad8a647a58df31aefd8f2703b9f86dc5" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1ga49f82b7aafd3ae237243c85272597fa7" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1ga72441f0d67497c90602a123c45dc53d1" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1gaf40e1a1f0edc608d4413f096a19aae78" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1gac303715911a48c482acb6ae4188508d3" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>Spointer</name></member>
      <member refid="group__table_1gad078973f8318ccf5800db79e87584dcc" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>Spointer</name></member>
      <member refid="classSpointer_1a8fa50c04246ceb3a48e961946a2427f7" prot="public" virt="non-virtual"><scope>SKIPpointer</scope><name>state</name></member>
      <member refid="group__table_1gaacf829ba5696414bdcc753e97e76a7f1" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>subsume</name></member>
      <member refid="group__table_1gae02f880deb0305e3122caf05f9d2bad0" prot="public" virt="virtual" ambiguityscope="SIPpointer::"><scope>SKIPpointer</scope><name>subsume</name></member>
      <member refid="group__table_1gaa50fe6e651b28c77839ddfaf1bbdcd4f" prot="public" virt="virtual" ambiguityscope="SIpointer::"><scope>SKIPpointer</scope><name>subsume</name></member>
      <member refid="group__table_1ga06fa67855bfb50d81e18bdfacce965ce" prot="public" virt="virtual" ambiguityscope="Spointer::"><scope>SKIPpointer</scope><name>subsume</name></member>
      <member refid="group__table_1ga01caac75d66ff2e272a248c7e1954415" prot="public" virt="virtual"><scope>SKIPpointer</scope><name>terminalWeight</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
