<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="md_src_table_README" kind="page">
    <compoundname>md_src_table_README</compoundname>
    <title>src/table</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A table stores the result of parsing wrt a given grammar. It defines the associations to <computeroutput>keys</computeroutput> of <computeroutput>records</computeroutput>, where every <computeroutput>records</computeroutput> contains some <computeroutput>runs</computeroutput>, and can be requested for a k-best <computeroutput>run</computeroutput>.</para>
<para><computeroutput>Keys</computeroutput> : Several classes of <computeroutput>keys</computeroutput> are implemented (named <computeroutput>Ptr*</computeroutput>), made of different components, amongst:</para>
<para><itemizedlist>
<listitem><para>state</para>
</listitem><listitem><para>rank (kth best number)</para>
</listitem><listitem><para>interval bounds and alignments</para>
</listitem><listitem><para>pre and post values.</para>
</listitem></itemizedlist>
</para>
<para>A <computeroutput>key</computeroutput> can have unknown components, and in this case it is called partial. Partial <computeroutput>keys</computeroutput> can be completed symbolic constraint solving techniques (see below).</para>
<para><computeroutput>Runs</computeroutput> : A <computeroutput>run</computeroutput> is either a tuple of <computeroutput>keys</computeroutput> (inner <computeroutput>run</computeroutput>) or a <computeroutput>label</computeroutput> (terminal = leaf <computeroutput>run</computeroutput>). A <computeroutput>key</computeroutput> in a <computeroutput>run</computeroutput> defines a pointer to a sub-<computeroutput>run</computeroutput>: it is the k-best <computeroutput>run</computeroutput> (according to the rank) for the <computeroutput>key</computeroutput> defined by other components of the pointer. Therefore, one can reconstruct a tree given a <computeroutput>run</computeroutput> and a <computeroutput>table</computeroutput>, and a <computeroutput>table</computeroutput> associates best trees (with <computeroutput>labels</computeroutput> in leaves) to <computeroutput>keys</computeroutput>.</para>
<para>An inner <computeroutput>run</computeroutput> is partial when some of its <computeroutput>key</computeroutput> is unknown or when its weight is not computed (from the weights of sub-<computeroutput>runs</computeroutput>). We complete a <computeroutput>run</computeroutput> by updating the <computeroutput>keys</computeroutput> and weight from left to right.</para>
<para><computeroutput>Records</computeroutput> : A <computeroutput>record</computeroutput> stores (complete) <computeroutput>runs</computeroutput>. Bests <computeroutput>runs</computeroutput> can be accessed from a record.</para>
<para><computeroutput><ref refid="classTable" kindref="compound">Table</ref></computeroutput> : A <computeroutput>table</computeroutput> associates a <computeroutput>record</computeroutput> (hence best <computeroutput>runs</computeroutput>) to a (complete) <computeroutput>key</computeroutput>. One can add a <computeroutput>run</computeroutput> to a <computeroutput>key</computeroutput> in a given <computeroutput>table</computeroutput>. More precisely:</para>
<para><itemizedlist>
<listitem><para>one can add a complete <computeroutput>run</computeroutput> to a complete <computeroutput>key</computeroutput> : the <computeroutput>run</computeroutput> is then just added to the associated <computeroutput>record</computeroutput>.</para>
</listitem><listitem><para>one can add a partial <computeroutput>run</computeroutput> to a <computeroutput>key</computeroutput>. In that case the <computeroutput>run</computeroutput> is completed first.</para>
</listitem><listitem><para>one can add a complete <computeroutput>run</computeroutput> to a partial <computeroutput>key</computeroutput> : the <computeroutput>key</computeroutput> is then completed according to the values in the <computeroutput>run</computeroutput>. Some example can be found in notes. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
