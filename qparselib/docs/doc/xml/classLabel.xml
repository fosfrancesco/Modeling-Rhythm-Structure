<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classLabel" kind="class" language="C++" prot="public">
    <compoundname>Label</compoundname>
    <derivedcompoundref refid="classEventLabel" prot="private" virt="non-virtual">EventLabel</derivedcompoundref>
    <derivedcompoundref refid="classInnerLabel" prot="private" virt="non-virtual">InnerLabel</derivedcompoundref>
    <includes local="no">Label.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classLabel_1a6a1180995fe66be113d8433f40251715" prot="protected" static="no" mutable="no">
        <type>LabelKind</type>
        <definition>LabelKind Label::_type</definition>
        <argsstring></argsstring>
        <name>_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="128" column="1" bodyfile="src/output/Label.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLabel_1a072ec434ffc5fbe8bc4f8618e559dda6" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Label::_ar</definition>
        <argsstring></argsstring>
        <name>_ar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="131" column="1" bodyfile="src/output/Label.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__output_1gaa2d2c8bb6a5bd48679122a220a9d8d00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Label::Label</definition>
        <argsstring>(int a=0)</argsstring>
        <name>Label</name>
        <param>
          <type>int</type>
          <declname>a</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="90" column="1" bodyfile="src/output/Label.cpp" bodystart="17" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga189208973cef74bb65357535d43885ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Label::arity</definition>
        <argsstring>() const</argsstring>
        <name>arity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="92" column="1" bodyfile="src/output/Label.cpp" bodystart="27" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classLabel_1aece2f72aeab3b5e59371d270acd66ef7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Label::isLeaf</definition>
        <argsstring>() const</argsstring>
        <name>isLeaf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="94" column="1" bodyfile="src/output/Label.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classLabel_1ae6629ed1895cbb2a95cdf284cbd18cdd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Label::isInner</definition>
        <argsstring>() const</argsstring>
        <name>isInner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="96" column="1" bodyfile="src/output/Label.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classLabel_1a46339b9942fe44345634652e245807b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>LabelKind</type>
        <definition>LabelKind Label::kind</definition>
        <argsstring>() const</argsstring>
        <name>kind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="98" column="1" bodyfile="src/output/Label.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="group__output_1ga9c677c6efeee575a05c0a32511ad7cf1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Label::nbGraceNotes</definition>
        <argsstring>(label_t)</argsstring>
        <name>nbGraceNotes</name>
        <param>
          <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="101" column="1" bodyfile="src/output/Label.cpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga58660df99e9a20f35ee0dab2901aa637" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Label::nbEvents</definition>
        <argsstring>(label_t)</argsstring>
        <name>nbEvents</name>
        <param>
          <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="104" column="1" bodyfile="src/output/Label.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga56a227805fd6d43d1f2618e871a4108c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Label::continuation</definition>
        <argsstring>(label_t)</argsstring>
        <name>continuation</name>
        <param>
          <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="107" column="1" bodyfile="src/output/Label.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga3724371343de270b6f488ca47d11b917" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Label::abstract</definition>
        <argsstring>(label_t)</argsstring>
        <name>abstract</name>
        <param>
          <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="110" column="1" bodyfile="src/output/Label.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga07b8cb2137bfde63b8f2686ed6f20db0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Label::abstract</definition>
        <argsstring>(label_t a, label_t n)</argsstring>
        <name>abstract</name>
        <param>
          <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="113" column="1" bodyfile="src/output/Label.cpp" bodystart="64" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga686ea0e366bdefcf68714e411cad577f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Label::leqabstract</definition>
        <argsstring>(label_t a, label_t n)</argsstring>
        <name>leqabstract</name>
        <param>
          <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="group__output_1ga22fde970e635fcf63962743b2d5c441d" kindref="member">label_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/Label.hpp" line="116" column="1" bodyfile="src/output/Label.cpp" bodystart="85" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>labels for nodes of output Rhythm Trees. </para>
    </briefdescription>
    <detaileddescription>
<para>Inner nodes are simply labeled by arity.</para>
<para>Leaves are labeled by info on:<itemizedlist>
<listitem><para>input (segment of unquantized points) and</para>
</listitem><listitem><para>output (quantized points).</para>
</listitem></itemizedlist>
</para>
<para>More precisely,<itemizedlist>
<listitem><para>the input info is about the alignement of unquantized input points on the bounds of the interval associated to the node. These are the pre and post values.</para>
</listitem><listitem><para>the output info is about the number of quantized input points in this interval.<itemizedlist>
<listitem><para>number 0 corresponds to a tie,</para>
</listitem><listitem><para>number 1 corresponds to a single event,</para>
</listitem><listitem><para>bigger numbers correspond to a event + grace notes.</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para>we consider the abstract domain [0,...,MAX_GRACE] for the values of:<itemizedlist>
<listitem><para>i) the pre and post, and</para>
</listitem><listitem><para>ii) the number of g.n. + note</para>
</listitem></itemizedlist>
</para>
<para>for i) the meaning is<itemizedlist>
<listitem><para>0: 0</para>
</listitem><listitem><para>1: 1</para>
</listitem><listitem><para>...</para>
</listitem><listitem><para>MAX_GRACE: &gt;= MAX_GRACE</para>
</listitem></itemizedlist>
</para>
<para>for ii) the meaning is<itemizedlist>
<listitem><para>0: tie (no event)</para>
</listitem><listitem><para>1: 1 note</para>
</listitem><listitem><para>2: 1 gn + 1 note</para>
</listitem><listitem><para>...</para>
</listitem><listitem><para>MAX_GRACE: &gt;= MAX_GRACE-1 gn + 1 note (appogiature) = all other cases</para>
</listitem></itemizedlist>
</para>
<para>an abstract label is a label in abstract domain.</para>
<para>a concrete label is a positive integer.</para>
<para>an abstract label a is an abstraction of a concrete label b if<itemizedlist>
<listitem><para>either b &lt;= MAX_GRACE and a = b</para>
</listitem><listitem><para>or b &gt; MAX_GRACE and a = MAX_GRACE. <xrefsect id="todo_1_todo000012"><xreftitle>Todo</xreftitle><xrefdescription><para>TBR the class <ref refid="classLabel" kindref="compound">Label</ref> is not used (except for static members) </para>
</xrefdescription></xrefsect></para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="155">
        <label>InnerLabel</label>
        <link refid="classInnerLabel"/>
        <childnode refid="153" relation="private-inheritance">
        </childnode>
      </node>
      <node id="154">
        <label>EventLabel</label>
        <link refid="classEventLabel"/>
        <childnode refid="153" relation="private-inheritance">
        </childnode>
      </node>
      <node id="153">
        <label>Label</label>
        <link refid="classLabel"/>
      </node>
    </inheritancegraph>
    <location file="src/output/Label.hpp" line="86" column="1" bodyfile="src/output/Label.hpp" bodystart="85" bodyend="133"/>
    <listofallmembers>
      <member refid="classLabel_1a072ec434ffc5fbe8bc4f8618e559dda6" prot="protected" virt="non-virtual"><scope>Label</scope><name>_ar</name></member>
      <member refid="classLabel_1a6a1180995fe66be113d8433f40251715" prot="protected" virt="non-virtual"><scope>Label</scope><name>_type</name></member>
      <member refid="group__output_1ga3724371343de270b6f488ca47d11b917" prot="public" virt="non-virtual"><scope>Label</scope><name>abstract</name></member>
      <member refid="group__output_1ga07b8cb2137bfde63b8f2686ed6f20db0" prot="public" virt="non-virtual"><scope>Label</scope><name>abstract</name></member>
      <member refid="group__output_1ga189208973cef74bb65357535d43885ed" prot="public" virt="non-virtual"><scope>Label</scope><name>arity</name></member>
      <member refid="group__output_1ga56a227805fd6d43d1f2618e871a4108c" prot="public" virt="non-virtual"><scope>Label</scope><name>continuation</name></member>
      <member refid="classLabel_1ae6629ed1895cbb2a95cdf284cbd18cdd" prot="public" virt="non-virtual"><scope>Label</scope><name>isInner</name></member>
      <member refid="classLabel_1aece2f72aeab3b5e59371d270acd66ef7" prot="public" virt="non-virtual"><scope>Label</scope><name>isLeaf</name></member>
      <member refid="classLabel_1a46339b9942fe44345634652e245807b0" prot="public" virt="non-virtual"><scope>Label</scope><name>kind</name></member>
      <member refid="group__output_1gaa2d2c8bb6a5bd48679122a220a9d8d00" prot="public" virt="non-virtual"><scope>Label</scope><name>Label</name></member>
      <member refid="group__output_1ga686ea0e366bdefcf68714e411cad577f" prot="public" virt="non-virtual"><scope>Label</scope><name>leqabstract</name></member>
      <member refid="group__output_1ga58660df99e9a20f35ee0dab2901aa637" prot="public" virt="non-virtual"><scope>Label</scope><name>nbEvents</name></member>
      <member refid="group__output_1ga9c677c6efeee575a05c0a32511ad7cf1" prot="public" virt="non-virtual"><scope>Label</scope><name>nbGraceNotes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
