<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="Table_8hpp" kind="file" language="C++">
    <compoundname>Table.hpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">queue</includes>
    <includes refid="init_8hpp" local="yes">init.hpp</includes>
    <includes refid="trace_8hpp" local="yes">trace.hpp</includes>
    <includes refid="State_8hpp" local="yes">State.hpp</includes>
    <includes refid="Transition_8hpp" local="yes">Transition.hpp</includes>
    <includes refid="Rune_8hpp" local="yes">Rune.hpp</includes>
    <includes refid="Record_8hpp" local="yes">Record.hpp</includes>
    <includes refid="Atable_8hpp" local="yes">Atable.hpp</includes>
    <includes local="yes">Table.tpp</includes>
    <includedby refid="Parser1bar1bestSIP_8hpp" local="yes">src/parsers/Parser1bar1bestSIP.hpp</includedby>
    <includedby refid="Parser1barKbestSKIP_8hpp" local="yes">src/parsers/Parser1barKbestSKIP.hpp</includedby>
    <includedby refid="ParserInputless1best_8hpp" local="yes">src/parsers/ParserInputless1best.hpp</includedby>
    <includedby refid="ParserInputlessKbest_8hpp" local="yes">src/parsers/ParserInputlessKbest.hpp</includedby>
    <includedby refid="ParserMultibar1bestSIPBU_8hpp" local="yes">src/parsers/ParserMultibar1bestSIPBU.hpp</includedby>
    <includedby refid="ParserMultibar1bestSIPflat_8hpp" local="yes">src/parsers/ParserMultibar1bestSIPflat.hpp</includedby>
    <includedby refid="equiv_8cpp" local="yes">src/targets/equiv/equiv.cpp</includedby>
    <includedby refid="meiutil-v0_8cpp" local="yes">src/targets/mei/meiutil-v0.cpp</includedby>
    <includedby refid="meiutil_8cpp" local="yes">src/targets/mei/meiutil.cpp</includedby>
    <incdepgraph>
      <node id="552">
        <label>queue</label>
      </node>
      <node id="550">
        <label>assert.h</label>
      </node>
      <node id="553">
        <label>Table.tpp</label>
      </node>
      <node id="548">
        <label>src/table/Table.hpp</label>
        <link refid="Table_8hpp"/>
        <childnode refid="549" relation="include">
        </childnode>
        <childnode refid="550" relation="include">
        </childnode>
        <childnode refid="551" relation="include">
        </childnode>
        <childnode refid="552" relation="include">
        </childnode>
        <childnode refid="553" relation="include">
        </childnode>
      </node>
      <node id="551">
        <label>unordered_map</label>
      </node>
      <node id="549">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classTable" prot="public">Table</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__table_1ga72ef50ecaa053517b9a0248d9fd8b942" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class P</type>
          </param>
          <param>
            <type>class R</type>
          </param>
          <param>
            <type>class H</type>
          </param>
        </templateparamlist>
        <type>std::unordered_map&lt; P, R, H &gt;</type>
        <definition>using MapRecord =  std::unordered_map&lt;P,R,H&gt;</definition>
        <argsstring></argsstring>
        <name>MapRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/Table.hpp" line="34" column="1" bodyfile="src/table/Table.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__table_1ga1a3458aadde4572a615622fa95c4216d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class P</type>
          </param>
          <param>
            <type>class H</type>
          </param>
        </templateparamlist>
        <type>std::unordered_multimap&lt; P, P, H &gt;</type>
        <definition>using MapInstances =  std::unordered_multimap&lt;P,P,H&gt;</definition>
        <argsstring></argsstring>
        <name>MapInstances</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/table/Table.hpp" line="38" column="1" bodyfile="src/table/Table.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/table/Table.hpp"/>
  </compounddef>
</doxygen>
