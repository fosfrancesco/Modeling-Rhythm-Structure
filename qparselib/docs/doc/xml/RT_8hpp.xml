<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="RT_8hpp" kind="file" language="C++">
    <compoundname>RT.hpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">assert.h</includes>
    <includes refid="Label_8hpp" local="yes">Label.hpp</includes>
    <includedby refid="APTED_8cpp" local="yes">src/output/APTED.cpp</includedby>
    <includedby refid="LilyPond_8cpp" local="yes">src/output/LilyPond.cpp</includedby>
    <includedby refid="MEI_8hpp" local="yes">src/output/MEI.hpp</includedby>
    <includedby refid="OMRT_8hpp" local="yes">src/output/OMRT.hpp</includedby>
    <includedby refid="PointedRT_8hpp" local="yes">src/output/PointedRT.hpp</includedby>
    <includedby refid="RT_8cpp" local="yes">src/output/RT.cpp</includedby>
    <includedby refid="Parser1barKbestSKIP_8hpp" local="yes">src/parsers/Parser1barKbestSKIP.hpp</includedby>
    <includedby refid="ParserInputless1best_8hpp" local="yes">src/parsers/ParserInputless1best.hpp</includedby>
    <includedby refid="ParserInputlessKbest_8hpp" local="yes">src/parsers/ParserInputlessKbest.hpp</includedby>
    <includedby refid="ParserMultibar1bestSIPBU_8hpp" local="yes">src/parsers/ParserMultibar1bestSIPBU.hpp</includedby>
    <includedby refid="ParserMultibar1bestSIPflat_8hpp" local="yes">src/parsers/ParserMultibar1bestSIPflat.hpp</includedby>
    <includedby refid="WTA_8hpp" local="yes">src/schemata/WTA.hpp</includedby>
    <includedby refid="CountingWTA_8hpp" local="yes">src/schemata/CountingWTA.hpp</includedby>
    <includedby refid="equiv_8cpp" local="yes">src/targets/equiv/equiv.cpp</includedby>
    <includedby refid="meiutil-newparser_8cpp" local="yes">src/targets/mei/meiutil-newparser.cpp</includedby>
    <includedby refid="meiutil-v0_8cpp" local="yes">src/targets/mei/meiutil-v0.cpp</includedby>
    <includedby refid="meiutil_8cpp" local="yes">src/targets/mei/meiutil.cpp</includedby>
    <includedby refid="quant201710_8cpp" local="yes">src/targets/quant/quant201710.cpp</includedby>
    <includedby refid="quant201712_8cpp" local="yes">src/targets/quant/quant201712.cpp</includedby>
    <includedby refid="squant-input_8cpp" local="yes">src/targets/quant/squant-input.cpp</includedby>
    <includedby refid="squant_8cpp" local="yes">src/targets/quant/squant.cpp</includedby>
    <includedby refid="schemas_8cpp" local="yes">src/targets/schema/schemas.cpp</includedby>
    <incdepgraph>
      <node id="164">
        <label>assert.h</label>
      </node>
      <node id="161">
        <label>string</label>
      </node>
      <node id="160">
        <label>vector</label>
      </node>
      <node id="163">
        <label>iostream</label>
      </node>
      <node id="162">
        <label>ctype.h</label>
      </node>
      <node id="158">
        <label>src/output/RT.hpp</label>
        <link refid="RT_8hpp"/>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classPosition" prot="public">Position</innerclass>
    <innerclass refid="classRhythmTree" prot="public">RhythmTree</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__output_1gaa15fcbf280e167eab1fe03f9c0f5663c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classPosition" kindref="compound">Position</ref></type>
        <definition>Position operator+</definition>
        <argsstring>(const Position &amp;p, const size_t &amp;i)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classPosition" kindref="compound">Position</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/output/RT.hpp" line="52" column="1" bodyfile="src/output/RT.hpp" bodystart="52" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/output/RT.hpp"/>
  </compounddef>
</doxygen>
