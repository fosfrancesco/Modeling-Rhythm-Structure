<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="Weight_8hpp" kind="file" language="C++">
    <compoundname>Weight.hpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">iostream</includes>
    <includedby refid="WTAFile_8hpp" local="yes">src/input/WTAFile.hpp</includedby>
    <includedby refid="Transition_8hpp" local="yes">src/schemata/Transition.hpp</includedby>
    <includedby refid="WTA_8hpp" local="yes">src/schemata/WTA.hpp</includedby>
    <includedby refid="CountingWTA_8hpp" local="yes">src/schemata/CountingWTA.hpp</includedby>
    <includedby refid="Rune_8hpp" local="yes">src/table/Rune.hpp</includedby>
    <includedby refid="Ptr_8hpp" local="yes">src/table/Ptr.hpp</includedby>
    <includedby refid="CountingWeight_8hpp" local="yes">src/weight/CountingWeight.hpp</includedby>
    <includedby refid="Distance_8hpp" local="yes">src/weight/Distance.hpp</includedby>
    <includedby refid="TropicalWeight_8hpp" local="yes">src/weight/TropicalWeight.hpp</includedby>
    <includedby refid="FloatWeight_8hpp" local="yes">src/weight/FloatWeight.hpp</includedby>
    <includedby refid="ViterbiWeight_8hpp" local="yes">src/weight/ViterbiWeight.hpp</includedby>
    <includedby refid="Weight_8cpp" local="yes">src/weight/Weight.cpp</includedby>
    <incdepgraph>
      <node id="744">
        <label>assert.h</label>
      </node>
      <node id="745">
        <label>math.h</label>
      </node>
      <node id="746">
        <label>iostream</label>
      </node>
      <node id="742">
        <label>src/weight/Weight.hpp</label>
        <link refid="Weight_8hpp"/>
        <childnode refid="743" relation="include">
        </childnode>
        <childnode refid="744" relation="include">
        </childnode>
        <childnode refid="745" relation="include">
        </childnode>
        <childnode refid="746" relation="include">
        </childnode>
      </node>
      <node id="743">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classLetterWeight" prot="public">LetterWeight</innerclass>
    <innerclass refid="classWeight" prot="public">Weight</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__weight_1ga985964770c3e3b3aea4ea1ebd817f1c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Weight &amp;lhs, const Weight &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/weight/Weight.hpp" line="260" column="1" bodyfile="src/weight/Weight.hpp" bodystart="260" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="group__weight_1ga3f8df07b63284c0a1d9da46b7d01588e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Weight &amp;lhs, const Weight &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/weight/Weight.hpp" line="265" column="1" bodyfile="src/weight/Weight.hpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="group__weight_1gaf058ecdf4336e4dff64400d149c791f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Weight &amp;lhs, const Weight &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>smaller </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/weight/Weight.hpp" line="270" column="1" bodyfile="src/weight/Weight.hpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="group__weight_1ga3eb9b7d865559995803e57f557f085b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const Weight &amp;lhs, const Weight &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/weight/Weight.hpp" line="275" column="1" bodyfile="src/weight/Weight.hpp" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="group__weight_1ga37b0ffb977541c9ff2ee7fdc3ec9fd0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const Weight &amp;lhs, const Weight &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/weight/Weight.hpp" line="280" column="1" bodyfile="src/weight/Weight.hpp" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="group__weight_1ga77d4e41a067e6104b5783f06a5018a1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const Weight &amp;lhs, const Weight &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/weight/Weight.hpp" line="285" column="1" bodyfile="src/weight/Weight.hpp" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="group__weight_1ga5fa6fc187426e2cc6aa40f7acddf8455" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const Weight &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="classWeight" kindref="compound">Weight</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>print </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/weight/Weight.hpp" line="290" column="1" bodyfile="src/weight/Weight.hpp" bodystart="290" bodyend="294"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/weight/Weight.hpp"/>
  </compounddef>
</doxygen>
