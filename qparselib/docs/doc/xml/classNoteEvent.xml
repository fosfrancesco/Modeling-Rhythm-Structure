<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classNoteEvent" kind="class" language="C++" prot="public">
    <compoundname>NoteEvent</compoundname>
    <basecompoundref refid="classMusEvent" prot="public" virt="non-virtual">MusEvent</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classNoteEvent_1a3a9e39f1c7b38802f52f64bc03a0ba60" prot="protected" static="no" mutable="no">
        <type><ref refid="classPitch" kindref="compound">Pitch</ref></type>
        <definition>Pitch NoteEvent::_pitch</definition>
        <argsstring></argsstring>
        <name>_pitch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="138" column="1" bodyfile="src/segment/MusEvent.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNoteEvent_1afeec6adc37e86a01e903dfb6fd24d8e7" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int NoteEvent::_velocity</definition>
        <argsstring></argsstring>
        <name>_velocity</name>
        <briefdescription>
<para>MIDI velocity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="141" column="1" bodyfile="src/segment/MusEvent.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__segment_1gaeeb3a0d391bef4a285f1be45d31e63be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NoteEvent::NoteEvent</definition>
        <argsstring>(unsigned int vel=MusEvent::UNDEF_VELOCITY, int nb=EVENTNB_UNKNOWN)</argsstring>
        <name>NoteEvent</name>
        <param>
          <type>unsigned int</type>
          <declname>vel</declname>
          <defval>MusEvent::UNDEF_VELOCITY</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nb</declname>
          <defval><ref refid="group__general_1gac3b19762b16f33de03662fd4289fe5a9" kindref="member">EVENTNB_UNKNOWN</ref></defval>
        </param>
        <briefdescription>
<para>unpitched note (drums). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="100" column="1" bodyfile="src/segment/MusEvent.cpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1ga1bd25b8699a9ed866f11f62a844645f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NoteEvent::NoteEvent</definition>
        <argsstring>(Pitch p, unsigned int vel=MusEvent::UNDEF_VELOCITY, int nb=EVENTNB_UNKNOWN)</argsstring>
        <name>NoteEvent</name>
        <param>
          <type><ref refid="classPitch" kindref="compound">Pitch</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>vel</declname>
          <defval>MusEvent::UNDEF_VELOCITY</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nb</declname>
          <defval><ref refid="group__general_1gac3b19762b16f33de03662fd4289fe5a9" kindref="member">EVENTNB_UNKNOWN</ref></defval>
        </param>
        <briefdescription>
<para>pitched note. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="104" column="1" bodyfile="src/segment/MusEvent.cpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1ga135e904aa3f5ea4d375e451281fe5323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NoteEvent::NoteEvent</definition>
        <argsstring>(unsigned int p, unsigned int vel=MusEvent::UNDEF_VELOCITY, int nb=EVENTNB_UNKNOWN)</argsstring>
        <name>NoteEvent</name>
        <param>
          <type>unsigned int</type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>vel</declname>
          <defval>MusEvent::UNDEF_VELOCITY</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nb</declname>
          <defval><ref refid="group__general_1gac3b19762b16f33de03662fd4289fe5a9" kindref="member">EVENTNB_UNKNOWN</ref></defval>
        </param>
        <briefdescription>
<para>pitched note with MIDI pitch in 0..127. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="109" column="1" bodyfile="src/segment/MusEvent.cpp" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1ga9250db2a9fadb2184d60187e38ee02cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NoteEvent::NoteEvent</definition>
        <argsstring>(const NoteEvent &amp;)</argsstring>
        <name>NoteEvent</name>
        <param>
          <type>const <ref refid="classNoteEvent" kindref="compound">NoteEvent</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="113" column="1" bodyfile="src/segment/MusEvent.cpp" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classNoteEvent_1a9f5b32dbc2cd7819799bf9a9d88778a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NoteEvent::~NoteEvent</definition>
        <argsstring>()</argsstring>
        <name>~NoteEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="115" column="1" bodyfile="src/segment/MusEvent.hpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1ga2fe5abb4cd9fbe000b1ec13114d60049" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classMusEvent" kindref="compound">MusEvent</ref> *</type>
        <definition>MusEvent * NoteEvent::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classMusEvent_1a013a5d979aeac811d74929b41b188762">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="117" column="1" bodyfile="src/segment/MusEvent.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classNoteEvent_1afd1615e5f11074184f08946b14232c37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool NoteEvent::isRest</definition>
        <argsstring>() const</argsstring>
        <name>isRest</name>
        <reimplements refid="classMusEvent_1aa2d6c7ee99cdd95839aee1e5b5df2d92">isRest</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="119" column="1" bodyfile="src/segment/MusEvent.hpp" bodystart="119" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classNoteEvent_1aaf40b5c82f0f6517b34ca3e0d89f585a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool NoteEvent::isNote</definition>
        <argsstring>() const</argsstring>
        <name>isNote</name>
        <reimplements refid="classMusEvent_1abf3d0067b2b28275a26223083b745c7c">isNote</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="122" column="1" bodyfile="src/segment/MusEvent.hpp" bodystart="122" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classNoteEvent_1a5e8947bdb559558ed1313c02e0bbe834" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NoteEvent::unpitched</definition>
        <argsstring>() const</argsstring>
        <name>unpitched</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="125" column="1" bodyfile="src/segment/MusEvent.hpp" bodystart="125" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classNoteEvent_1a1129f35ed935be6cdc0ce4609677795d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int NoteEvent::velocity</definition>
        <argsstring>() const</argsstring>
        <name>velocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="128" column="1" bodyfile="src/segment/MusEvent.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classNoteEvent_1aa4a9213eb0af96782b6b50de0ef101b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classPitch" kindref="compound">Pitch</ref> &amp;</type>
        <definition>Pitch&amp; NoteEvent::pitch</definition>
        <argsstring>()</argsstring>
        <name>pitch</name>
        <briefdescription>
<para>can be modified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="131" column="1" bodyfile="src/segment/MusEvent.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group__segment_1gafa25174e584b872e814643c895cad283" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void NoteEvent::print</definition>
        <argsstring>(std::ostream &amp;o) const</argsstring>
        <name>print</name>
        <reimplements refid="classMusEvent_1a1a53c7e09246ad1441d26069ff4a9387">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/MusEvent.hpp" line="133" column="1" bodyfile="src/segment/MusEvent.cpp" bodystart="94" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="185">
        <label>MusEvent</label>
        <link refid="classMusEvent"/>
      </node>
      <node id="184">
        <label>NoteEvent</label>
        <link refid="classNoteEvent"/>
        <childnode refid="185" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="187">
        <label>MusEvent</label>
        <link refid="classMusEvent"/>
      </node>
      <node id="188">
        <label>Pitch</label>
        <link refid="classPitch"/>
      </node>
      <node id="186">
        <label>NoteEvent</label>
        <link refid="classNoteEvent"/>
        <childnode refid="187" relation="public-inheritance">
        </childnode>
        <childnode refid="188" relation="usage">
          <edgelabel>_pitch</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/segment/MusEvent.hpp" line="97" column="1" bodyfile="src/segment/MusEvent.hpp" bodystart="96" bodyend="143"/>
    <listofallmembers>
      <member refid="classNoteEvent_1a3a9e39f1c7b38802f52f64bc03a0ba60" prot="protected" virt="non-virtual"><scope>NoteEvent</scope><name>_pitch</name></member>
      <member refid="classNoteEvent_1afeec6adc37e86a01e903dfb6fd24d8e7" prot="protected" virt="non-virtual"><scope>NoteEvent</scope><name>_velocity</name></member>
      <member refid="group__segment_1ga2fe5abb4cd9fbe000b1ec13114d60049" prot="public" virt="virtual"><scope>NoteEvent</scope><name>clone</name></member>
      <member refid="classNoteEvent_1aaf40b5c82f0f6517b34ca3e0d89f585a" prot="public" virt="virtual"><scope>NoteEvent</scope><name>isNote</name></member>
      <member refid="classNoteEvent_1afd1615e5f11074184f08946b14232c37" prot="public" virt="virtual"><scope>NoteEvent</scope><name>isRest</name></member>
      <member refid="group__segment_1ga00b69e8f1bf80a478fce420d5d378c17" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>MusEvent</name></member>
      <member refid="group__segment_1ga40f47305a4bd7afbf26a4fbee663dd27" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>MusEvent</name></member>
      <member refid="group__segment_1gaeeb3a0d391bef4a285f1be45d31e63be" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>NoteEvent</name></member>
      <member refid="group__segment_1ga1bd25b8699a9ed866f11f62a844645f7" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>NoteEvent</name></member>
      <member refid="group__segment_1ga135e904aa3f5ea4d375e451281fe5323" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>NoteEvent</name></member>
      <member refid="group__segment_1ga9250db2a9fadb2184d60187e38ee02cc" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>NoteEvent</name></member>
      <member refid="classMusEvent_1a8cbcc375091dd31d300993cb41e5c31f" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>number</name></member>
      <member refid="classNoteEvent_1aa4a9213eb0af96782b6b50de0ef101b0" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>pitch</name></member>
      <member refid="group__segment_1gafa25174e584b872e814643c895cad283" prot="public" virt="virtual"><scope>NoteEvent</scope><name>print</name></member>
      <member refid="group__segment_1ga5e0ecbf9869effe45cacf0c1a191615c" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>UNDEF_VELOCITY</name></member>
      <member refid="classNoteEvent_1a5e8947bdb559558ed1313c02e0bbe834" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>unpitched</name></member>
      <member refid="classNoteEvent_1a1129f35ed935be6cdc0ce4609677795d" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>velocity</name></member>
      <member refid="classMusEvent_1a9d195422a823d831bff7d47ed15584a7" prot="public" virt="virtual"><scope>NoteEvent</scope><name>~MusEvent</name></member>
      <member refid="classNoteEvent_1a9f5b32dbc2cd7819799bf9a9d88778a5" prot="public" virt="non-virtual"><scope>NoteEvent</scope><name>~NoteEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
