<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structIntervalHasher" kind="struct" language="C++" prot="public">
    <compoundname>IntervalHasher</compoundname>
    <includes local="no">Interval.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structIntervalHasher_1a473d01d16bcc37b4744c1773cc85b3ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t IntervalHasher::operator()</definition>
        <argsstring>(const Interval &amp;p) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classInterval" kindref="compound">Interval</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/segment/Interval.hpp" line="145" column="1" bodyfile="src/segment/Interval.hpp" bodystart="145" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>hash function for using interval as key in a unordered map. </para>
    </briefdescription>
    <detaileddescription>
<para>musical time bounds are ignored here <xrefsect id="todo_1_todo000025"><xreftitle>Todo</xreftitle><xrefdescription><para>TBR </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="src/segment/Interval.hpp" line="144" column="1" bodyfile="src/segment/Interval.hpp" bodystart="143" bodyend="162"/>
    <listofallmembers>
      <member refid="structIntervalHasher_1a473d01d16bcc37b4744c1773cc85b3ac" prot="public" virt="non-virtual"><scope>IntervalHasher</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
